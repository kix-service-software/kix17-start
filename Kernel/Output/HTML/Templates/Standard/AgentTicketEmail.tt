# --
# Modified version of the work: Copyright (C) 2006-2023 KIX Service Software GmbH, https://www.kixdesk.com
# based on the original work of:
# Copyright (C) 2001-2023 OTRS AG, https://otrs.com/
# --
# This software comes with ABSOLUTELY NO WARRANTY. For details, see
# the enclosed file LICENSE for license information (AGPL). If you
# did not receive this file, see https://www.gnu.org/licenses/agpl.txt.
# --


[% InsertTemplate("AgentCustomerSearch.tt") %]
<div class="MainBox ARIARoleMain FormScreen">

    <h1>
[% RenderBlockStart("MaskHeader") %]
      [% Translate(Data.Text) | html %]
[% RenderBlockEnd("MaskHeader") %]
    </h1>
    <p class="AsteriskExplanation">[% Translate("All fields marked with an asterisk (*) are mandatory.") | html %]</p>

    <div class="LayoutFixedSidebar SidebarLast">

       <div class="SidebarColumn">
           [% Data.KIXSidebarContent %]
       </div>

        <div class="ContentColumn">
            <form action="[% Env("CGIHandle") %]" method="post" enctype="multipart/form-data" name="compose" id="NewEmailTicket" class="Validate PreventMultipleSubmits">
                <input type="hidden" name="Action" value="[% Env("Action") %]"/>
                <input type="hidden" name="Subaction" value="StoreNew"/>
                <input type="hidden" name="FormID" value="[% Data.FormID | html %]"/>
                <input type="hidden" name="DefaultSetTypeChanged" id="DefaultSetTypeChanged" value="[% Data.DefaultSetTypeChanged | html %]"/>
                <input type="hidden" name="DefaultSet" id="DefaultSet" value="[% Data.DefaultSet | html %]"/>
                <input type="hidden" name="SelectedConfigItemIDs" id="SelectedConfigItemIDs" value="[% Data.SelectedConfigItemIDs | html %]"/>
                <input type="hidden" name="LinkTicketID" value="[% Data.LinkTicketID | html %]"/>
                <input type="hidden" name="ExpandCustomerName" id="ExpandCustomerName" value="0"/>
                <input type="hidden" name="OwnerAll" id="OwnerAll" value="[% Data.OwnerAll | html %]"/>
                <input type="hidden" name="ResponsibleAll" id="ResponsibleAll" value="[% Data.ResponsibleAll | html %]"/>
                <input type="hidden" name="PreSelectedCustomerUser" id="PreSelectedCustomerUser" value=""/>
                <input type="hidden" name="SelectedCustomerUser" id="SelectedCustomerUser" value="[% Data.CustomerUser | html %]"/>
                <input type="hidden" name="TicketID" value="[% Data.TicketID | html %]"/>
# ---
# ITSMIncidentProblemManagement
# ---
                <input type="hidden" name="ImpactRC" value="0"/>
                <input type="hidden" name="PriorityRC" value="0"/>
# ---
                <fieldset class="TableLike">

# example template for customizations, see hidden form at the end of the file
#                    <label>[% Translate("Templates") | html %]:</label>
#                    <div class="Field">
#                        <button type="button" onclick="$('#Template1').submit()" value="[% Translate("Example Template") | html %]">[% Translate("Example Template") | html %]</button>
#                    </div>
#                    <div class="Clear"></div>

[% RenderBlockStart("DefaultSetSelection") %]
                    <label class="" for="DefaultSetSelection">[% Translate("Ticket-Template selection") | html %]:</label>
                    <div class="Field">
                        [% Data.DefaultSetSelStr %]
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
    $('#DefaultSetSelection').on('change', function (Event) {
        Core.Form.Validate.DisableValidation($(this).closest('form'));
        $('#DefaultSet').val( $(this).val() );
        $('input[name="Subaction"]').val('');
        $('#ExpandCustomerName').val('5');
        $('#DefaultSetTypeChanged').val('');
        $(this).closest('form').submit();
    });
    $('#TypeID').on('change', function (Event) {
        if ( $('#DefaultSetSelection').val() != '' ) {
            $('#DefaultSetTypeChanged').val(1);
        }
        else {
            $('#DefaultSetTypeChanged').val('');
        }
    });
//]]></script>
[% END %]
                    </div>
                    <div class="Clear"></div>
[% RenderBlockEnd("DefaultSetSelection") %]

[% RenderBlockStart("TicketType") %]
                    <label class="Mandatory" for="TypeID"><span class="Marker">*</span> [% Translate("Type") | html %]:</label>
                    <div class="Field">
                        [% Data.TypeStrg %]
                        <div id="TypeIDError" class="TooltipErrorMessage"><p>[% Translate("This field is required.") | html %]</p></div>
                        <div id="TypeIDServerError" class="TooltipErrorMessage"><p>[% Translate("This field is required.") | html %]</p></div>
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
$('#TypeID').on('change', function (Event) {
    Core.AJAX.FormUpdate($('#NewEmailTicket'), 'AJAXUpdate', 'TypeID', [ 'Dest', 'NewUserID', 'NewResponsibleID', 'NextStateID', 'PriorityID', 'ServiceID', 'SLAID', 'SignKeyID', 'CryptKeyID', 'To', 'Cc', 'Bcc', 'StandardTemplateID' [% Data.DynamicFieldNamesStrg %]]);
});
//]]></script>
[% END %]
                    </div>
                    <div class="Clear"></div>
[% RenderBlockEnd("TicketType") %]

                    <label class="Mandatory" for="Dest"><span class="Marker">*</span> [% Translate("From queue") | html %]:</label>
                    <div class="Field">
                        [% Data.FromStrg %]
                        <div id="DestError" class="TooltipErrorMessage" ><p>[% Translate("This field is required.") | html %]</p></div>
                        <div id="DestServerError" class="TooltipErrorMessage"><p>[% Translate("This field is required.") | html %]</p></div>
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
$('#Dest').on('change', function (Event) {
    var Dest         = $(this).val() || '',
        CustomerUser = $('#SelectedCustomerUser').val() || '';
    var SignatureURL = '[% Env("Baselink") %]Action=[% Env("Action") %];Subaction=Signature;Dest=' + Dest + ';SelectedCustomerUser=' + CustomerUser;
    Core.AJAX.FormUpdate($('#NewEmailTicket'), 'AJAXUpdate', 'Dest', ['TypeID', 'Signature', 'NewUserID', 'NewResponsibleID', 'NextStateID', 'PriorityID', 'ServiceID', 'SLAID', 'SignKeyID', 'CryptKeyID', 'To', 'Cc', 'Bcc', 'StandardTemplateID' [% Data.DynamicFieldNamesStrg %]]);
    if (!Core.Config.Get('SessionIDCookie')) {
        SignatureURL += ';' + Core.Config.Get('SessionName') + '=' + Core.Config.Get('SessionID');
    }
    $('#Signature').attr('src', SignatureURL);
});
//]]></script>
[% END %]
                    </div>
                    <div class="Clear"></div>

[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
    $('.CustomerTicketRadio').on('change', function () {
        var CustomerKey;
        if ( $(this).prop('checked') ){
            // reset selected customer id
            $('#CustomerID').val('');

            CustomerKey = $( '#CustomerKey_' +$(this).val() ).val();
            // get customer tickets
            Core.Agent.CustomerSearch.ReloadCustomerInfo(CustomerKey);
        }
        return false;
    });

    $('.CustomerTicketRemove').on('click', function () {
        Core.Agent.CustomerSearch.RemoveCustomerTicket( $(this) );
        return false;
    });
//]]></script>
[% END %]

[% RenderBlockStart("FromExternalCustomer") %]
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
    Core.Agent.CustomerSearch.AddTicketCustomer( 'ToCustomer', "[% Data.Email | html %]", "[% Data.Customer | html %]", true );
//]]></script>
[% END %]
[% RenderBlockEnd("FromExternalCustomer") %]

                    <label for="ToCustomer" class="Mandatory"><span class="Marker">*</span>[% Translate("To contact") | html %]:</label>
                    <div class="Field">
                        <input id="ToCustomer" type="text" name="ToCustomer" value="" class="CustomerAutoComplete W75pc [% Data.ToIsLocalAddress | html %] [% Data.ToInvalid | html %]" autocomplete="off" />
                        <p class="FieldExplanation">[% Translate('Press ENTER to apply unknown contact.') | html %]</p>
                        <div id="ToCustomerServerError" class="TooltipErrorMessage">
[% RenderBlockStart("ToServerErrorMsg") %]
                            <p>[% Translate("Please include at least one contact for the ticket.") | html %]</p>
[% RenderBlockEnd("ToServerErrorMsg") %]

[% RenderBlockStart("ToIsLocalAddressServerErrorMsg") %]
                            <p>[% Translate("This address is registered as system address and cannot be used: %s", Data.To) | html %]</p>
[% RenderBlockEnd("ToIsLocalAddressServerErrorMsg") %]
                        </div>
                    </div>
                    <div class="Clear"></div>

                    <div class="Field [% Data.CustomerHiddenContainer | html %]">
                        <div class="CustomerTicketTemplateToCustomer Hidden">
                            <input name="CustomerSelected" title="[% Translate("Select this customer as the main customer.") | html %]" id="CustomerSelected" class="CustomerTicketRadio" type="radio" value=""/>
                            <input name="CustomerKey" id="CustomerKey" class="CustomerKey" type="hidden" value=""/>
                            <input class="CustomerTicketText Radio" title="[% Translate("To contact") | html %]" name="CustomerTicketText" id="CustomerTicketText" type="text" value="" readonly="readonly" />
                            <a href="#" id="RemoveCustomerTicket" class="RemoveButton CustomerTicketRemove">
                                <i class="fa fa-minus-square-o"></i>
                                <span class="InvisibleText">[% Translate("Remove Ticket contact") | html %]</span>
                            </a>
                        </div>

                        <div id="TicketCustomerContentToCustomer" class="CustomerContainer">
[% RenderBlockStart("MultipleCustomer") %]
                            <div>
                                <input name="CustomerSelected" title="[% Translate("Select this customer as the main customer.") | html %]" id="CustomerSelected" class="CustomerTicketRadio" type="radio" value="[% Data.Count | html %]" [% Data.CustomerSelected | html %]  [% Data.CustomerDisabled | html %] />
                                <input name="CustomerKey_[% Data.Count | html %]" id="CustomerKey_[% Data.Count | html %]" class="CustomerKey" type="hidden" value="[% Data.CustomerKey | html %]"/>
                                <input class="CustomerTicketText Radio [% Data.CustomerError | html %]" name="CustomerTicketText_[% Data.Count %]" id="CustomerTicketText_[% Data.Count %]" type="text" value="[% Data.CustomerElement | html %]" readonly="readonly" />
                                <a href="#" id="RemoveCustomerTicket_[% Data.Count %]" class="RemoveButton CustomerTicketRemove">
                                    <i class="fa fa-minus-square-o"></i>
                                    <span class="InvisibleText">[% Translate("Remove Ticket contact") | html %]</span>
                                </a>

[% RenderBlockStart("CustomerErrorExplantion") %]
                                <p class="Explanation Error">[% Translate("Please remove this entry and enter a new one with the correct value.") | html %]</p>
[% RenderBlockEnd("CustomerErrorExplantion") %]

                                <div id="CustomerTicketText_[% Data.Count %]ServerError" class="TooltipErrorMessage">
[% RenderBlockStart("CustomerGenericServerErrorMsg") %]
                                    <p>[% Translate("This field is required.") | html %]</p>
[% RenderBlockEnd("CustomerGenericServerErrorMsg") %]
[% RenderBlockStart("InvalidConfigServerErrorMsg") %]
                                    <p>[% Translate("This email address is not allowed due to the system configuration.") | html %]</p>
[% RenderBlockEnd("InvalidConfigServerErrorMsg") %]
[% RenderBlockStart("InvalidMXServerErrorMsg") %]
                                    <p>[% Translate("This email address failed MX check.") | html %]</p>
[% RenderBlockEnd("InvalidMXServerErrorMsg") %]
[% RenderBlockStart("InvalidDNSServerErrorMsg") %]
                                    <p>[% Translate("DNS problem, please check your configuration and the error log.") | html %]</p>
[% RenderBlockEnd("InvalidDNSServerErrorMsg") %]
[% RenderBlockStart("InvalidSyntaxServerErrorMsg") %]
                                    <p>[% Translate("The syntax of this email address is incorrect.") | html %]</p>
[% RenderBlockEnd("InvalidSyntaxServerErrorMsg") %]
[% RenderBlockStart("IsDuplicatedServerErrorMsg") %]
                                    <p>[% Translate("This address already exists on the address list.") | html %]</p>
[% RenderBlockEnd("IsDuplicatedServerErrorMsg") %]
                                </div>
                            </div>
[% RenderBlockEnd("MultipleCustomer") %]
                        </div>
[% RenderBlockStart("MultipleCustomerCounter") %]
                        <input name="CustomerTicketCounterToCustomer" id="CustomerTicketCounterToCustomer" type="hidden" value="[% Data.CustomerCounter | html %]"/>
[% RenderBlockEnd("MultipleCustomerCounter") %]
                    </div>
                    <div class="Clear"></div>

                    <label for="CcCustomer">[% Translate("Cc") | html %]:</label>
                    <div class="Field">
                        <input id="CcCustomer" type="text" name="CcCustomer" value="" class="CustomerAutoComplete W75pc [% Data.CcIsLocalAddress | html %] [% Data.CcInvalid | html %]" autocomplete="off" />
                        <p class="FieldExplanation">[% Translate('Press ENTER to apply unknown contact.') | html %]</p>
                        <div id="CcCustomerServerError" class="TooltipErrorMessage">
[% RenderBlockStart("CcIsLocalAddressServerErrorMsg") %]
                            <p>[% Translate("This address is registered as system address and cannot be used: %s", Data.Cc) | html %]</p>
[% RenderBlockEnd("CcIsLocalAddressServerErrorMsg") %]
                        </div>
                    </div>
                    <div class="Clear"></div>

                    <div class="Field [% Data.CcCustomerHiddenContainer | html %]">
                        <div class="CustomerTicketTemplateCcCustomer SpacingTopSmall Hidden">
                            <input name="CcCustomerKey" id="CcCustomerKey" class="CustomerKey" type="hidden" value=""/>
                            <input class="CustomerTicketText" title="[% Translate("Cc") | html %]" name="CcCustomerTicketText" id="CcCustomerTicketText" type="text" value="" readonly="readonly" />
                            <a href="#" id="CcRemoveCustomerTicket" class="RemoveButton CustomerTicketRemove">
                                <i class="fa fa-minus-square-o"></i>
                                <span class="InvisibleText">[% Translate("Remove Cc") | html %]</span>
                            </a>
                        </div>

                        <div id="TicketCustomerContentCcCustomer" class="CcCustomerContainer">
[% RenderBlockStart("CcMultipleCustomer") %]
                            <div>
                                <input name="CcCustomerKey_[% Data.Count | html %]" id="CcCustomerKey_[% Data.Count | html %]" class="CustomerKey" type="hidden" value="[% Data.CustomerKey | html %]"/>
                                <input class="CustomerTicketText [% Data.CustomerError | html %]" name="CcCustomerTicketText_[% Data.Count %]" id="CcCustomerTicketText_[% Data.Count %]" type="text" value="[% Data.CustomerElement | html %]" readonly="readonly" />
                                <a href="#" id="CcRemoveCustomerTicket_[% Data.Count %]" class="RemoveButton CustomerTicketRemove">
                                    <i class="fa fa-minus-square-o"></i>
                                    <span class="InvisibleText">[% Translate("Remove Cc") | html %]</span>
                                </a>

[% RenderBlockStart("CcCustomerErrorExplantion") %]
                                <p class="Explanation Error">[% Translate("Please remove this entry and enter a new one with the correct value.") | html %]</p>
[% RenderBlockEnd("CcCustomerErrorExplantion") %]

                                <div id="CcCustomerTicketText_[% Data.Count %]ServerError" class="TooltipErrorMessage">
[% RenderBlockStart("CcCustomerGenericServerErrorMsg") %]
                                    <p>[% Translate("This field is required.") | html %]</p>
[% RenderBlockEnd("CcCustomerGenericServerErrorMsg") %]
[% RenderBlockStart("CcInvalidConfigServerErrorMsg") %]
                                    <p>[% Translate("This email address is not allowed due to the system configuration.") | html %]</p>
[% RenderBlockEnd("CcInvalidConfigServerErrorMsg") %]
[% RenderBlockStart("CcInvalidMXServerErrorMsg") %]
                                    <p>[% Translate("This email address failed MX check.") | html %]</p>
[% RenderBlockEnd("CcInvalidMXServerErrorMsg") %]
[% RenderBlockStart("CcInvalidDNSServerErrorMsg") %]
                                    <p>[% Translate("DNS problem, please check your configuration and the error log.") | html %]</p>
[% RenderBlockEnd("CcInvalidDNSServerErrorMsg") %]
[% RenderBlockStart("CcInvalidSyntaxServerErrorMsg") %]
                                    <p>[% Translate("The syntax of this email address is incorrect.") | html %]</p>
[% RenderBlockEnd("CcInvalidSyntaxServerErrorMsg") %]
[% RenderBlockStart("CcIsDuplicatedServerErrorMsg") %]
                                    <p>[% Translate("This address already exists on the address list.") | html %]</p>
[% RenderBlockEnd("CcIsDuplicatedServerErrorMsg") %]
                                </div>
                            </div>
[% RenderBlockEnd("CcMultipleCustomer") %]

                        </div>
[% RenderBlockStart("CcMultipleCustomerCounter") %]
                        <input name="CustomerTicketCounterCcCustomer" id="CustomerTicketCounterCcCustomer" type="hidden" value="[% Data.CustomerCounter | html %]"/>
[% RenderBlockEnd("CcMultipleCustomerCounter") %]
                    </div>
                    <div class="Clear"></div>

                    <label for="BccCustomer">[% Translate("Bcc") | html %]:</label>
                    <div class="Field">
                        <input id="BccCustomer" type="text" name="BccCustomer" value="" class="CustomerAutoComplete W75pc [% Data.BccIsLocalAddress | html %] [% Data.BccInvalid | html %]" autocomplete="off" />
                        <p class="FieldExplanation">[% Translate('Press ENTER to apply unknown contact.') | html %]</p>
                    </div>

                    <div id="BccCustomerServerError" class="TooltipErrorMessage">
[% RenderBlockStart("BccIsLocalAddressServerErrorMsg") %]
                        <p>[% Translate("This address is registered as system address and cannot be used: %s", Data.Bcc) | html %]</p>
[% RenderBlockEnd("BccIsLocalAddressServerErrorMsg") %]
                    </div>
                    <div class="Clear"></div>

                    <div class="Field [% Data.BccCustomerHiddenContainer | html %]">
                        <div class="CustomerTicketTemplateBccCustomer SpacingTopSmall Hidden">
                            <input name="BccCustomerKey" id="BccCustomerKey" class="CustomerKey" type="hidden" value=""/>
                            <input class="CustomerTicketText" title="[% Translate("Bcc") | html %]" name="BccCustomerTicketText" id="BccCustomerTicketText" type="text" value="" readonly="readonly" />
                            <a href="#" id="BccRemoveCustomerTicket" class="RemoveButton CustomerTicketRemove">
                                <i class="fa fa-minus-square-o"></i>
                                <span class="InvisibleText">[% Translate("Remove Bcc") | html %]</span>
                            </a>
                        </div>

                        <div id="TicketCustomerContentBccCustomer" class="BccCustomerContainer">
[% RenderBlockStart("BccMultipleCustomer") %]
                            <div>
                                <input name="BccCustomerKey_[% Data.Count | html %]" id="BccCustomerKey_[% Data.Count | html %]" class="CustomerKey" type="hidden" value="[% Data.CustomerKey | html %]"/>
                                <input class="CustomerTicketText [% Data.CustomerError | html %]" name="BccCustomerTicketText_[% Data.Count %]" id="BccCustomerTicketText_[% Data.Count %]" type="text" value="[% Data.CustomerElement | html %]" readonly="readonly" />
                                <a href="#" id="BccRemoveCustomerTicket_[% Data.Count %]" class="RemoveButton CustomerTicketRemove">
                                    <i class="fa fa-minus-square-o"></i>
                                    <span class="InvisibleText">[% Translate("Remove Bcc") | html %]</span>
                                </a>

[% RenderBlockStart("BccCustomerErrorExplantion") %]
                                <p class="Explanation Error">[% Translate("Please remove this entry and enter a new one with the correct value.") | html %]</p>
[% RenderBlockEnd("BccCustomerErrorExplantion") %]

                                <div id="BccCustomerTicketText_[% Data.Count %]ServerError" class="TooltipErrorMessage">
[% RenderBlockStart("BccCustomerGenericServerErrorMsg") %]
                                    <p>[% Translate("This field is required.") | html %]</p>
[% RenderBlockEnd("BccCustomerGenericServerErrorMsg") %]
[% RenderBlockStart("BccInvalidConfigServerErrorMsg") %]
                                    <p>[% Translate("This email address is not allowed due to the system configuration.") | html %]</p>
[% RenderBlockEnd("BccInvalidConfigServerErrorMsg") %]
[% RenderBlockStart("BccInvalidMXServerErrorMsg") %]
                                    <p>[% Translate("This email address failed MX check.") | html %]</p>
[% RenderBlockEnd("BccInvalidMXServerErrorMsg") %]
[% RenderBlockStart("BccInvalidDNSServerErrorMsg") %]
                                    <p>[% Translate("DNS problem, please check your configuration and the error log.") | html %]</p>
[% RenderBlockEnd("BccInvalidDNSServerErrorMsg") %]
[% RenderBlockStart("BccInvalidSyntaxServerErrorMsg") %]
                                    <p>[% Translate("The syntax of this email address is incorrect.") | html %]</p>
[% RenderBlockEnd("BccInvalidSyntaxServerErrorMsg") %]
[% RenderBlockStart("BccIsDuplicatedServerErrorMsg") %]
                                    <p>[% Translate("This address already exists on the address list.") | html %]</p>
[% RenderBlockEnd("BccIsDuplicatedServerErrorMsg") %]
                                </div>
                            </div>
[% RenderBlockEnd("BccMultipleCustomer") %]

                        </div>
[% RenderBlockStart("BccMultipleCustomerCounter") %]
                        <input name="CustomerTicketCounterBccCustomer" id="CustomerTicketCounterBccCustomer" type="hidden" value="[% Data.CustomerCounter | html %]"/>
[% RenderBlockEnd("BccMultipleCustomerCounter") %]
                    </div>
                    <div class="Clear"></div>

                    <label for="CustomerID">[% Translate("CustomerID") | html %]:</label>
                    <div class="Field">
                        <input type="text" name="CustomerID" id="CustomerID" value="[% Data.CustomerID | html %]" autocomplete="off" [% IF Config("Ticket::Frontend::AgentTicketEmail::CustomerIDReadOnly") %] readonly [% END %] class="W75pc"/>
                    </div>

                    <div class="Clear"></div>

[% RenderBlockStart("TicketService") %]
                    <label for="ServiceID">[% Translate("Service") | html %]:</label>
                    <div class="Field">
                        [% Data.ServiceStrg %]
                        <div id="ServiceIDServerError" class="TooltipErrorMessage"><p>[% Translate("Service invalid.") | html %]</p></div>
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
    $('#ServiceID').on('change', function (Event) {
        Core.AJAX.FormUpdate($('#NewEmailTicket'), 'AJAXUpdate', 'ServiceID', ['TypeID', 'Dest', 'NewUserID', 'NewResponsibleID', 'NextStateID', 'PriorityID', 'SLAID', 'SignKeyID', 'CryptKeyID', 'To', 'Cc', 'Bcc', 'StandardTemplateID' [% Data.DynamicFieldNamesStrg %]]);
# ---
# ITSMIncidentProblemManagement
# ---
#    });

/*global ITSM: true */
        // show service incident state and signal for the selected service
        ITSM.Agent.IncidentState.ShowIncidentState({
            Action: '[% Env("Action") %]',
            ServiceID: $('#ServiceID').val()
        });
});
# ---
//]]></script>
[% END %]
                    </div>
                    <div class="Clear"></div>
# ---
# ITSMIncidentProblemManagement
# ---
                    <label for="ServiceIncidentStateContainer" style="display:none;">[% Translate("Service Incident State") | html %]:</label>
                    <div id="ServiceIncidentStateContainer" class="Field" style="display:none;">
                        <div class="Value">
                            <div class="Flag Small">
                                <span id="ServiceIncidentStateSignal"></span>
                            </div>
                            <span id="ServiceIncidentState">&nbsp;</span>
                        </div>
                    </div>
                    <div class="Clear"></div>
# ---
[% RenderBlockEnd("TicketService") %]

[% RenderBlockStart("TicketServiceMandatory") %]
                    <label class="Mandatory" for="ServiceID"><span class="Marker">*</span> [% Translate("Service") | html %]:</label>
                    <div class="Field">
                        [% Data.ServiceStrg %]
                        <div id="ServiceIDError" class="TooltipErrorMessage" ><p>[% Translate("This field is required.") | html %]</p></div>
                        <div id="ServiceIDServerError" class="TooltipErrorMessage"><p>[% Translate("Service invalid.") | html %]</p></div>
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
    $('#ServiceID').on('change', function (Event) {
        Core.AJAX.FormUpdate($('#NewEmailTicket'), 'AJAXUpdate', 'ServiceID', ['TypeID', 'Dest', 'NewUserID', 'NewResponsibleID', 'NextStateID', 'PriorityID', 'SLAID', 'SignKeyID', 'CryptKeyID', 'To', 'Cc', 'Bcc', 'StandardTemplateID' [% Data.DynamicFieldNamesStrg %]]);
# ---
# ITSMIncidentProblemManagement
# ---
#    });

/*global ITSM: true */
        // show service incident state and signal for the selected service
        ITSM.Agent.IncidentState.ShowIncidentState({
            Action: '[% Env("Action") %]',
            ServiceID: $('#ServiceID').val()
        });
});
# ---
//]]></script>
[% END %]
                    </div>
                    <div class="Clear"></div>
# ---
# ITSMIncidentProblemManagement
# ---
                    <label for="ServiceIncidentStateContainer" style="display:none;">[% Translate("Service Incident State") | html %]:</label>
                    <div id="ServiceIncidentStateContainer" class="Value" style="display:none;">
                        <div class="Flag Small">
                            <span id="ServiceIncidentStateSignal"></span>
                        </div>
                        <span id="ServiceIncidentState">&nbsp;</span>
                    </div>
                    <div class="Clear"></div>
# ---
[% RenderBlockEnd("TicketServiceMandatory") %]

[% RenderBlockStart("TicketSLA") %]
                    <label for="SLAID">[% Translate("Service Level Agreement") | html %]:</label>
                    <div class="Field">
                        [% Data.SLAStrg %]
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
    $('#SLAID').on('change', function (Event) {
        Core.AJAX.FormUpdate($('#NewEmailTicket'), 'AJAXUpdate', 'SLAID', ['TypeID', 'Dest', 'NewUserID', 'NewResponsibleID', 'ServiceID', 'NextStateID', 'PriorityID', 'SignKeyID', 'CryptKeyID', 'To', 'Cc', 'Bcc', 'StandardTemplateID' [% Data.DynamicFieldNamesStrg %]]);
    });
//]]></script>
[% END %]
                    </div>
                    <div class="Clear"></div>
[% RenderBlockEnd("TicketSLA") %]

[% RenderBlockStart("TicketSLAMandatory") %]
                    <label class="Mandatory" for="SLAID"><span class="Marker">*</span> [% Translate("Service Level Agreement") | html %]:</label>
                    <div class="Field">
                        [% Data.SLAStrg %]
                        <div id="SLAIDError" class="TooltipErrorMessage" ><p>[% Translate("This field is required.") | html %]</p></div>
                        <div id="SLAIDServerError" class="TooltipErrorMessage"><p>[% Translate("This field is required.") | html %]</p></div>
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
    $('#SLAID').on('change', function (Event) {
        Core.AJAX.FormUpdate($('#NewEmailTicket'), 'AJAXUpdate', 'SLAID', ['TypeID', 'Dest', 'NewUserID', 'NewResponsibleID', 'ServiceID', 'NextStateID', 'PriorityID', 'SignKeyID', 'CryptKeyID', 'To', 'Cc', 'Bcc', 'StandardTemplateID' [% Data.DynamicFieldNamesStrg %]]);
    });
//]]></script>
[% END %]
                    </div>
                    <div class="Clear"></div>
[% RenderBlockEnd("TicketSLAMandatory") %]

[% RenderBlockStart("OwnerSelection") %]
                    <label for="NewUserID">[% Translate("Owner") | html %]:</label>
                    <div class="Field">
                        [% Data.OptionStrg %]
                        <a href="#" id="OwnerSelectionGetAll" class="GetAllAJAX" title="[% Translate("Get all") | html %]">
                            <span>[% Translate("Get all") | html %]</span>
                            <i class="fa fa-refresh"></i>
                        </a>
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
$('#OwnerSelectionGetAll').on('click', function (Event) {
    $('#OwnerAll').val('1'); // Needed? Why?
    Core.AJAX.FormUpdate($('#NewEmailTicket'), 'AJAXUpdate', 'OwnerAll', ['NewUserID'], function() {
        $('#NewUserID').focus();
    });
    return false;
});

$('#NewUserID').on('change', function (Event) {
    Core.AJAX.FormUpdate($('#NewEmailTicket'), 'AJAXUpdate', 'NewUserID', [ 'TypeID', 'Dest', 'NewResponsibleID', 'NextStateID', 'PriorityID', 'ServiceID', 'SLAID', 'SignKeyID', 'CryptKeyID', 'To', 'Cc', 'Bcc', 'StandardTemplateID' [% Data.DynamicFieldNamesStrg %]]);
});
//]]></script>
[% END %]
                    </div>
                    <div class="Clear"></div>
[% RenderBlockEnd("OwnerSelection") %]

[% RenderBlockStart("ResponsibleSelection") %]
                    <label for="NewResponsibleID">[% Translate("Responsible") | html %]:</label>
                    <div class="Field">
                        [% Data.ResponsibleOptionStrg %]
                        <a href="#" id="ResponsibleSelectionGetAll" class="GetAllAJAX" title="[% Translate("Get all") | html %]">
                            <span>[% Translate("Get all") | html %]</span>
                            <i class="fa fa-refresh"></i>
                        </a>
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
$('#ResponsibleSelectionGetAll').on('click', function (Event) {
    $('#ResponsibleAll').val('1'); // Needed? Why?
    Core.AJAX.FormUpdate($('#NewEmailTicket'), 'AJAXUpdate', 'ResponsibleAll', ['NewResponsibleID'], function() {
        $('#NewResponsibleID').focus();
    });
    return false;
});

$('#NewResponsibleID').on('change', function (Event) {
    Core.AJAX.FormUpdate($('#NewEmailTicket'), 'AJAXUpdate', 'NewResponsibleID', [ 'TypeID', 'Dest', 'NewUserID', 'NextStateID', 'PriorityID', 'ServiceID', 'SLAID', 'SignKeyID', 'CryptKeyID', 'To', 'Cc', 'Bcc', 'StandardTemplateID' [% Data.DynamicFieldNamesStrg %]]);
});
//]]></script>
[% END %]
                    </div>
                    <div class="Clear"></div>
[% RenderBlockEnd("ResponsibleSelection") %]

[% RenderBlockStart("Option") %]
                    <label for="[% Data.Name | html %]">[% Translate(Data.Key) | html %]:</label>
                    <div class="Field">
                        [% Data.Value %]
                        <div id="[% Data.Name | html %]ServerError" class="TooltipErrorMessage"><p>[% Data.Invalid | html %]</p></div>
                    </div>
                    <div class="Clear"></div>
[% RenderBlockEnd("Option") %]

                    <label class="Mandatory" for="Subject"><span class="Marker">*</span> [% Translate("Subject") | html %]:</label>
                    <div class="Field">
                        <input type="text" class="Validate_Required [% Data.SubjectInvalid | html %] W75pc " name="Subject" id="Subject" value="[% Data.Subject | html %]"/>
                        <div id="SubjectError" class="TooltipErrorMessage"><p>[% Translate("This field is required.") | html %]</p></div>
                        <div id="SubjectServerError" class="TooltipErrorMessage"><p>[% Translate("This field is required.") | html %]</p></div>
                    </div>
                    <div class="Clear"></div>

[% RenderBlockStart("TicketOptions") %]
                    <label for="Options">[% Translate("Options") | html %]:</label>
                    <div class="Options Field">

<!-- OutputFilterHook_TicketOptionsBegin -->

[% RenderBlockStart("AddressBook") %]
                        <a href="#" id="OptionAddressBook">[% Translate("Address book") | html %]</a>
[% RenderBlockEnd("AddressBook") %]
[% RenderBlockStart("OptionCustomer") %]
                        <a href="#" id="OptionCustomer">[% Translate("Contact") | html %]</a>
[% RenderBlockEnd("OptionCustomer") %]
# ---
# ITSMIncidentProblemManagement
# ---
                        <a href="[% Env("Baselink") %]Action=AgentLinkObject;Mode=Temporary;SourceObject=Ticket;SourceKey=[% Data.FormID | uri %];TargetIdentifier=ITSMConfigItem" id="OptionLinkTicket" class="AsPopup">[% Translate("Link ticket") | html %]</a>
# ---

<!-- OutputFilterHook_TicketOptionsEnd -->

                    </div>
                    <div class="Clear"></div>
[% RenderBlockEnd("TicketOptions") %]

<!-- OutputFilterHook_NoTicketOptionsFallback -->

[% RenderBlockStart("StandardTemplate") %]
                    <label for="StandardTemplateID">[% Translate("Text Template") | html %]:</label>
                    <div class="Field">
                        [% Data.StandardTemplateStrg %]
                        <p class="FieldExplanation">[% Translate("Setting a template will overwrite any text or attachment.") %]</p>
                    </div>
                    <div class="Clear"></div>
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
    $('#StandardTemplateID').on('change', function (Event) {
        // Fallback for non-richtext content
        var Content = $('#RichText').val();

        // get RTE content
        if (typeof CKEDITOR !== 'undefined') {
            Content = CKEDITOR.instances["RichText"].getData();
        }

        // if content already exists let user confirm to really overwrite that content with a template
        if (
            Content.length &&
            !window.confirm([% Translate("Setting a template will overwrite any text or attachment.") | JSON %] + ' ' + [% Translate("Do you really want to continue?") | JSON %])
        ) {
                // if user cancels confirmation, reset template selection
                $(this).val('');
                return false;
        }

        Core.AJAX.FormUpdate($('#NewEmailTicket'), 'AJAXUpdate', 'StandardTemplateID', ['RichTextField']);
        return false;
    });
//]]></script>
[% END %]
[% RenderBlockEnd("StandardTemplate") %]

                    <label class="Mandatory" for="RichText"><span class="Marker">*</span> [% Translate("Text") | html %]:</label>
                    <div id="RichTextField" class="RichTextField">

[% RenderBlockStart("RichText") %]
[% InsertTemplate("RichTextEditor.tt") %]
[% RenderBlockEnd("RichText") %]

                        <textarea id="RichText" class="RichText Validate_Required [% Data.BodyInvalid | html %]" name="Body" title="[% Translate("Message body") | html %]" rows="15" cols="[% Config("Ticket::Frontend::TextAreaEmail") %]">[% Data.Body | html %]</textarea>
                        <div id="RichTextError" class="TooltipErrorMessage"><p>[% Translate("This field is required.") | html %]</p></div>
                        <div id="RichTextServerError" class="TooltipErrorMessage"><p>[% Translate("This field is required.") | html %]</p></div>
                    </div>
                    <div class="Clear"></div>

                    <label for="Signature">[% Translate("Signature") | html %]:</label>
                    <div class="RichTextField">
                        <input type="hidden" name="Signature" value="[% Data.Signature | html %]"/>
                        <iframe height="140" width="620" frameborder="0" id="Signature" class="Signature" src="[% Env("Baselink") %]Action=[% Env("Action") %];Subaction=Signature;QueueID=[% Data.QueueID | html %]"></iframe>
                    </div>
                    <div class="Clear"></div>

                    <label for="FileUpload">[% Translate("Attachment") | html %]:</label>
                    <div class="Field FileUpload">
                        <ul>

[% RenderBlockStart("Attachment") %]
                            <li>
                                [% Data.Filename | html %] ([% Data.Filesize | html %])
                                <button type="button" id="AttachmentDeleteButton[% Data.FileID | html %]" name="AttachmentDeleteButton[% Data.FileID | html %]" value="[% Translate("Delete") | html %]" class="SpacingLeft">[% Translate("Delete") | html %]</button>
                                <input type="hidden" id="AttachmentDelete[% Data.FileID | html %]" name="AttachmentDelete[% Data.FileID | html %]" />
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
    $('#AttachmentDeleteButton[% Data.FileID | html %]').on('click', function () {
        var $Form = $('#AttachmentDeleteButton[% Data.FileID | html %]').closest('form');
        $('#AttachmentDelete[% Data.FileID | html %]').val(1);
        Core.Form.Validate.DisableValidation($Form);
        $Form.trigger('submit');
    });
//]]></script>
[% END %]
                            </li>
[% RenderBlockEnd("Attachment") %]

                            <li>
                                <input id="FileUpload" name="FileUpload" type="file" multiple="multiple" size="40" />
                                <input type="hidden" id="AttachmentUpload" name="AttachmentUpload" value="0" />
                            </li>
                        </ul>
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
$('#FileUpload').on('change', function () {
    var $Form = $('#FileUpload').closest('form');
    Core.Form.Validate.DisableValidation($Form);
    $Form.find('#AttachmentUpload').val('1').end().submit();
});
//]]></script>
[% END %]
                    </div>
                    <div class="Clear"></div>

                    <label class="Mandatory" for="NextStateID"><span class="Marker">*</span> [% Translate("Next ticket state") | html %]:</label>
                    <div class="Field">
                        [% Data.NextStatesStrg %]
                        <div id="NextStateIDError" class="TooltipErrorMessage"><p>[% Translate("This field is required.") | html %]</p></div>
                        <div id="NextStateIDServerError" class="TooltipErrorMessage"><p>[% Translate("This field is required.") | html %]</p></div>
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
    $('#NextStateID').on('change', function (Event) {
        Core.AJAX.FormUpdate($('#NewEmailTicket'), 'AJAXUpdate', 'NextStateID', [ 'TypeID', 'Dest', 'NewUserID','NewResponsibleID', 'PriorityID', 'ServiceID', 'SLAID', 'SignKeyID', 'CryptKeyID', 'To', 'Cc', 'Bcc', 'StandardTemplateID' [% Data.DynamicFieldNamesStrg %]]);
    });
//]]></script>
[% END %]
                    </div>
                    <div class="Clear"></div>
                    <label for="Date">[% Translate("Pending date") | html %]:</label>
                    <div class="Field">
                        [% Data.PendingDateString %]
                        <div id="DayServerError" class="TooltipErrorMessage"><p>[% Translate("Date invalid!") | html %]</p></div>
                        <div id="HourServerError" class="TooltipErrorMessage"><p>[% Translate("Date invalid!") | html %]</p></div>
                        <p class="FieldExplanation">[% Translate("For all pending* states.") | html %]</p>
                    </div>
                    <div class="Clear"></div>

# ---
# ITSMIncidentProblemManagement
# ---

# show the impact
[% RenderBlockStart("DynamicField_ITSMImpact") %]
                    <div class="Row Row_DynamicField_[% Data.Name | html %]">
                        [% Data.Label %]
                        <div class="Field">
                            [% Data.Field %]
                        </div>
                        <div class="Clear"></div>
                    </div>
[% RenderBlockEnd("DynamicField_ITSMImpact") %]
# ---
                    <label class="Mandatory" for="PriorityID"><span class="Marker">*</span> [% Translate("Priority") | html %]:</label>
                    <div class="Field">
                        [% Data.PriorityStrg %]
                        <div id="PriorityIDError" class="TooltipErrorMessage"><p>[% Translate("This field is required.") | html %]</p></div>
                        <div id="PriorityIDServerError" class="TooltipErrorMessage"><p>[% Translate("This field is required.") | html %]</p></div>
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
    $('#PriorityID').on('change', function (Event) {
        Core.AJAX.FormUpdate($('#NewEmailTicket'), 'AJAXUpdate', 'PriorityID', [ 'TypeID', 'Dest', 'NewUserID','NewResponsibleID', 'NextStateID', 'ServiceID', 'SLAID', 'SignKeyID', 'CryptKeyID', 'To', 'Cc', 'Bcc', 'StandardTemplateID' [% Data.DynamicFieldNamesStrg %]]);
    });
//]]></script>
[% END %]
                    </div>
                    <div class="Clear"></div>

[% RenderBlockStart("DynamicField") %]
                        <div class="Row Row_DynamicField_[% Data.Name | html %] [% Data.Class | html %]">
                        [% Data.Label %]
                        <div class="Field">
                            [% Data.Field %]
                        </div>
                        <div class="Clear"></div>
                    </div>
[% RenderBlockEnd("DynamicField") %]

[% RenderBlockStart("TimeUnitsLabel") %]
                    <label for="TimeUnits">[% Translate("Time units") | html %] [% Translate(Config("Ticket::Frontend::TimeUnits")) | html %]:</label>
[% RenderBlockEnd("TimeUnitsLabel") %]
[% RenderBlockStart("TimeUnitsLabelMandatory") %]
                    <label class="Mandatory" for="TimeUnits"><span class="Marker">*</span> [% Translate("Time units") | html %] [% Translate(Config("Ticket::Frontend::TimeUnits")) | html %]:</label>
[% RenderBlockEnd("TimeUnitsLabelMandatory") %]
[% RenderBlockStart("TimeUnits") %]
                    <div class="Field">
                        <input type="text" class="W50pc Validate_TimeUnits [% Data.TimeUnitsRequired | html %] [% Data.TimeUnitsInvalid | html %]" name="TimeUnits" id="TimeUnits" value="[% Data.TimeUnits | html %]"/>
                        <div id="TimeUnitsError" class="TooltipErrorMessage"><p>[% Translate("Invalid time!") | html %]</p></div>
                        <div id="TimeUnitsServerError" class="TooltipErrorMessage"><p>[% Translate("This field is required.") | html %]</p></div>
                    </div>
                    <div class="Clear"></div>
[% RenderBlockEnd("TimeUnits") %]
                    <div class="Field SpacingTop EndOfForm">
                        <button class="Primary CallForAction" id="submitRichText" accesskey="g" title="[% Translate("Send mail") | html %] (g)" type="submit" value="[% Translate("Send mail") | html %]" ><span><i class="fa fa-envelope-alt"></i> [% Translate("Send mail") | html %]</span></button>
                    </div>
                </fieldset>
            </form>
        </div>
        <div class="Clear"></div>
    </div>
    <div id="CustomerTickets"></div>
</div>

[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
    Core.Agent.TicketAction.Init();
    Core.Config.Set('Localization.Delete', [% Translate("Delete") | JSON %]);
    Core.KIX4OTRS.KIXSidebar.Init('[% Env("AgentTicketEmailSidebarWidth") %]','[% Env("Action") %]');
# ---
# ITSMIncidentProblemManagement
# ---
    $('a.AsPopup').on('click', function (Event) { Core.UI.Popup.OpenPopup( $(this).attr('href'), 'Action'); return false; } );

/*global ITSM: true */
        // show service incident state and signal for the selected service (this part here is important if the page is reloaded due to e.g. attachment upload)
        ITSM.Agent.IncidentState.ShowIncidentState({
            Action: '[% Env("Action") %]',
            ServiceID: $('#ServiceID').val()
        });
# ---
    // get linked config items
    Core.Form.Validate.SetSubmitFunction( $('#NewEmailTicket'), function (Form) {
        var SelectedConfigItemString = $('#SelectedConfigItemIDs').val();

        $(".LinkConfigItemCheckBox").filter(":checked").each(function() {
            var ConfigItemValue = $(this).val();
            if ( SelectedConfigItemString == '' ) {
                SelectedConfigItemString += ConfigItemValue;
            }
            else {
                SelectedConfigItemString += ',' + ConfigItemValue;
            }
        });
        $('#SelectedConfigItemIDs').val(SelectedConfigItemString);
        Form.submit();
    });

    // set checkboxes as checked
    if ( $('#SelectedConfigItemIDs') != '' ) {
        var SelectedConfigItemString = $('#SelectedConfigItemIDs').val(),
            ConfigItems = SelectedConfigItemString.split(',');

        for (var i = 0; i<ConfigItems.length ; i++) {
            if ( $('#LinkAssignedConfigItems'+ConfigItems[i]).length ) {
                $('#LinkAssignedConfigItems'+ConfigItems[i]).attr('checked','checked');
            }
        }
    }
//]]></script>
[% END %]
