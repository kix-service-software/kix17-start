# --
# Modified version of the work: Copyright (C) 2006-2023 KIX Service Software GmbH, https://www.kixdesk.com
# based on the original work of:
# Copyright (C) 2001-2023 OTRS AG, https://otrs.com/
# --
# This software comes with ABSOLUTELY NO WARRANTY. For details, see
# the enclosed file LICENSE for license information (AGPL). If you
# did not receive this file, see https://www.gnu.org/licenses/agpl.txt.
# --


[% RenderBlockStart("CommonJS") %]
<script type="text/javascript" src="[% Config("Frontend::JavaScriptPath") %][% Data.JSDirectory %][% Data.Filename %]"></script>
[% RenderBlockEnd("CommonJS") %]

[% RenderBlockStart("ModuleJS") %]
<script type="text/javascript" src="[% Config("Frontend::JavaScriptPath") %][% Data.JSDirectory %][% Data.Filename %]"></script>
[% RenderBlockEnd("ModuleJS") %]

<script type="text/javascript">//<![CDATA[
"use strict";
Core.App.Ready(function () {

    Core.Config.AddConfig({
        // config
        Baselink: '[% Env("Baselink") %]',
        AjaxDebug: '[% Config("Frontend::AjaxDebug") %]',
        CGIHandle: '[% Env("CGIHandle") %]',
        WebPath: '[% Config("Frontend::WebPath") %]',
        Action: '[% Env("Action") | html %]',
        SessionIDCookie: '[% Env("SessionIDCookie") | html %]',
        SessionName: '[% Config("SessionName") %]',
        SessionID: '[% Env("SessionID") | html %]',
        ChallengeToken: '[% Env("UserChallengeToken") | html %]',
        CustomerPanelSessionName: '[% Config("CustomerPanelSessionName") %]',
        Images: '[% Config("Frontend::ImagePath") %]',
        UserLanguage: '[% Env("UserLanguage") | html %]',
        UserID: '[% Env("UserID") | html %]',
        UserSkin: '[% Env("UserSkin") %]',
        RichTextSet: '[% Config("Frontend::RichText") | html %]',
        RichTextBrowserContextMenu: '[% Env("UserBrowserContextMenu") %]',
        CheckEmailAddresses: parseInt('[% Config("CheckEmailAddresses") %]', 10),
        AnimationEnabled: parseInt('[% Config("Frontend::AnimationEnabled") %]', 10),
        MenuDragDropEnabled: parseInt('[% Config("Frontend::MenuDragDropEnabled") %]', 10),
        OpenMainMenuOnHover: parseInt('[% Config("OpenMainMenuOnHover") %]', 10),
        CustomerInfoSet: parseInt('[% Config("Ticket::Frontend::CustomerInfoCompose") %]', 10),
        IncludeUnknownTicketCustomers: parseInt('[% Config("Ticket::IncludeUnknownTicketCustomers") %]', 10),
[% RenderBlockStart("AutoCompleteConfig") %]
        Autocomplete: [% Data.AutocompleteConfig %],
[% RenderBlockEnd("AutoCompleteConfig") %]
[% RenderBlockStart("SearchFrontendConfig") %]
        SearchFrontend: [% Data.SearchFrontendConfig | JSON %],
[% RenderBlockEnd("SearchFrontendConfig") %]
        CheckSearchStringsForStopWords: [% Config("Ticket::SearchIndex::WarnOnStopWordUsage") and Config("Ticket::SearchIndexModule") == 'Kernel::System::Ticket::ArticleSearchIndex::StaticDB' ? 1 : 0 %],
        // translations
        ValidateServerErrorTitle: [% Translate("Error") | JSON %],
        ValidateServerErrorMsg: [% Translate("One or more errors occurred!") | JSON %],
        PopupLeaveParentWindowMsg: [% Translate("If you now leave this page, all open popup windows will be closed, too!") | JSON %],
        DialogCloseMsg: [% Translate("Close this dialog") | JSON %],
        PopupBlockerMsg: [% Translate("Could not open popup window. Please disable any popup blockers for this application.") | JSON %],
        PopupAlreadyOpenMsg: [% Translate("A popup of this screen is already open. Do you want to close it and load this one instead?") | JSON %],
        LoadingMsg: [% Translate("Loading...") | JSON %],
        EmptySearchMsg: [% Translate("Please enter at least one search value or * to find anything.") | JSON %],
        SearchMsg: [% Translate("Search") | JSON %],
        SearchStringsContainStopWordsMsg: [% Translate("Please remove the following words from your search as they cannot be searched for:") |JSON %],
        FieldTitleFulltext: [% Translate("Fulltext") | JSON %],
        FieldTitleFrom: [% Translate("From") | JSON %],
        FieldTitleTo: [% Translate("To") | JSON %],
        FieldTitleCc: [% Translate("Cc") | JSON %],
        FieldTitleSubject: [% Translate("Subject") | JSON %],
        FieldTitleBody: [% Translate("Body") | JSON %],
        ValidationErrorMsg: [% Translate("Please check the fields marked as red for valid inputs.") | JSON %],
        DeleteMsg: [% Translate("Delete") | JSON %],
        ApplyButtonText: [% Translate("Apply") | JSON %],
        SlideNavigationText: [% Translate("Slide the navigation bar") | JSON %],
        NoElementsToSelectFromMsg: [% Translate("There are currently no elements available to select from.") | JSON %],
        TurnOffCompatibilityModeMsg: [% Translate("Please turn off Compatibility Mode in Internet Explorer!") | JSON %],
        BrowserTooOldMsg: [% Translate("The browser you are using is too old.") | JSON %],
        BrowserListMsg: [% Translate("KIX runs with a huge lists of browsers, please upgrade to one of these.") | JSON %],
        BrowserDocumentationMsg: [% Translate("Please see the documentation or ask your admin for further information.") | JSON %],
        ViewModeSwitchMobile:  [% Translate("Switch to mobile mode") | JSON %],
        ViewModeSwitchDesktop: [% Translate("Switch to desktop mode") | JSON %],
        InputFieldsActivated: parseInt('[% Config("ModernizeFormFields") %]', 10),
        InputFieldsNotAvailable: [% Translate("Not available") | JSON %],
        InputFieldsNoMatchMsg: [% Translate("No matches found.") | JSON %],
        InputFieldsSelectAll: [% Translate("Select all") | JSON %],
        InputFieldsClearAll: [% Translate("Clear all") | JSON %],
        InputFieldsClearSearch: [% Translate("Clear search") | JSON %],
        InputFieldsRemoveSelection: [% Translate("Remove selection") | JSON %],
        InputFieldsMore: [% Translate("and %s more...") | JSON %],
        InputFieldsFilters: [% Translate("Filters") | JSON %],
        InputFieldsConfirm: [% Translate("Confirm") | JSON %],
        TicketActionTemplateOverwrite: [% Translate("Setting a template will overwrite any text or attachment.") | JSON %],
        TicketActionTemplateOverwriteConfirm: [% Translate("Do you really want to continue?") | JSON %],
        AgentLogoURL: '[% Config("AgentLogo").URL %]',
        KIXDaemonDialogTitleMsg: [% Translate('Information about the KIX Daemon') | JSON %],

        ConnectionErrorTitle: [% Translate('Connection error') | JSON %],
        ConnectionErrorReloadButton: [% Translate('Reload page') | JSON %],
        StatsMsg: [% Translate("Stats") | JSON %],
        ShowToolbar: '[% Translate("show Toolbar") | html %]',
        HideToolbar: '[% Translate("hide Toolbar") | html %]'
    });

    Core.Agent.Init();
    Core.KIXBase.Agent.Init();

[% InsertTemplate("Datepicker.tt") %]

[% RenderBlockStart("NewTicketInNewWindow") %]
    $('#nav-Tickets-Newphoneticket a').attr('target', '_blank');
    $('#nav-Tickets-Newemailticket a').attr('target', '_blank');
    $('.PhoneTicket a').attr('target', '_blank');
    $('.EmailTicket a').attr('target', '_blank');
    $('.ProcessTicket a').attr('target', '_blank');
[% RenderBlockEnd("NewTicketInNewWindow") %]

});
//]]></script>

<script type="text/javascript">//<![CDATA[
"use strict";
Core.App.Ready(function () {

[% PROCESS JSOnDocumentCompleteInsert %]

    // responsive initialization must run as late as possible to include all event subscriptions
    // at the initialization process
    Core.App.Responsive.Init();
});
//]]></script>

# Finally, unblock click events on the page again after all JavaScript was loaded and
# executed. Put in an own block to make sure it is always run.
<script type="text/javascript">//<![CDATA[
"use strict";
Core.App.Ready(function () {
    Core.App.UnblockEvents();
});
//]]></script>

<div id="ResponsiveFooter">
    <div class="Visible-ScreenXL"></div>
    <div class="Visible-ScreenL"></div>
    <div class="Visible-ScreenM"></div>
    <div class="Visible-ScreenS"></div>
    <div class="Visible-ScreenXS"></div>
    <div id="ResponsiveCssLoaded" data-status="if-visible-responsive-css-is-not-loaded-or-finished"></div>
</div>
