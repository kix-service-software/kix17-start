# --
# Copyright (C) 2006-2023 c.a.p.e. IT GmbH, https://www.cape-it.de
# --
# This software comes with ABSOLUTELY NO WARRANTY. For details, see
# the enclosed file LICENSE for license information (AGPL). If you
# did not receive this file, see https://www.gnu.org/licenses/agpl.txt.
# --


<div id="MainBox" class="TicketView CustomerTicketTemplates ARIARoleMain">

    <div class="TemplateSelectionArea">
        <div>
            <div class="Header">
                 <h2><span>[% Translate("Filter templates and groups") | html %]</span></h2>
            </div>
            <div>
                <fieldset class="FilterArea">
                    <input id="PortalGroupFilter" type="text" placeholder="[% Translate("filter template groups") | html %]">
                        <a href="" id="PortalGroupFilterClear" title="[% Translate("Clear Filter") | html %]">
                            <i class="fa fa-times-circle"></i>
                        </a>
                    </input>
                    <input id="TicketTemplateFilter" type="text" placeholder="[% Translate("filter ticket templates") | html %]">
                        <a href="" id="TicketTemplateFilterClear" title="[% Translate("Clear Filter") | html %]">
                            <i class="fa fa-times-circle"></i>
                        </a>
                    </input>
                </fieldset>
            </div>
        </div>

        <div>
            <p class="SpacingBottomLarge">
                [% Translate("Please click an icon below to create a ticket from the desired template.") | html %]
            </p>

[% RenderBlockStart("PortalGroup") %]
            <div id="PortalGroup[% Translate(Data.PortalGroupID) | html %]" class="PortalGroup">
                <div class="Header">
                    <h1>[% Translate(Data.Name) | html %]</h1>
                </div>
                <div>
[% RenderBlockStart("TicketTemplate") %]
                    <div class="TicketTemplateElement">
                        <a class="[% Data.LinkClass | html %]" href="[% Env("Baselink") %][% Data.Link | html %]" title="[% Translate(Data.Name) | html %]">
                            <img src="data:[% Data.ContentType | html %];base64,[% Data.Content | html %]"/>
                        </a>
                        <span class="Label">[% Translate(Data.Name) | html %]</span>
                    </div>
[% RenderBlockEnd("TicketTemplate") %]
                </div>
            </div>
[% RenderBlockEnd("PortalGroup") %]
        </div>
    </div>
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[

    // init popups
    $('a.AsPopup').on('click', function(Event) {
        var Matches, PopupType = 'TicketAction';

        Matches = $(this).attr('class').match(/PopupType_(\w+)/);
        if (Matches) {
            PopupType = Matches[1];
        }
        $(this).addClass('PopupCalled');
        $('a.TabAsPopup.PopupCalled').prop('onClick',null);
        $('a.TabAsPopup.PopupCalled').on('click', function(Event) {
            $(this).removeClass('PopupCalled');
            return false;
        });
        Core.UI.Popup.OpenPopup($(this).attr('href'), PopupType);
        return false;
    });

    // init group filter
    $('#PortalGroupFilter').on('keyup', function(e) {
        var Filter = $(this).val().trim().toLowerCase();
        if (Filter.length > 0) {
            $('#PortalGroupFilterClear').css('visibility', 'visible');
            // hide all non-matching elements and show matching ones
            $('.PortalGroup').each(function() {
                if ($(this).find('.Header > h1').html().toLowerCase().match(Filter))
                    $(this).show();
                else
                    $(this).hide();
            });
        }
        else {
            $('#PortalGroupFilterClear').css('visibility', 'hidden');
            $('.PortalGroup').show();
        }
        // check if groups should be hidden because they are empty
        $('.PortalGroup').each(function() {
            if ($(this).find('.TicketTemplateElement:visible').length == 0)
                $(this).hide();
        });
    });
    $('#PortalGroupFilterClear').on('click', function(e) {
        e.preventDefault();
        $('#PortalGroupFilter').val('').trigger('keyup');
        $(this).css('visibility', 'hidden');
    });

    // init template filter
    $('#TicketTemplateFilter').on('keyup', function(e) {
        var Filter = $(this).val().trim().toLowerCase();
        if (Filter.length > 0) {
            $('#TicketTemplateFilterClear').css('visibility', 'visible');
            // hide all non-matching elements and show matching ones and their groups
            $('.TicketTemplateElement').each(function() {
                if ($(this).children('.Label').html().toLowerCase().match(Filter)) {
                    $(this).show();
                    // trigger group filter again
                    $(this).parents('.PortalGroup').show();
                    $('#PortalGroupFilter').trigger('keyup');
                }
                else
                    $(this).hide();
            });
        }
        else {
            $('#TicketTemplateFilterClear').css('visibility', 'hidden');
            // show all elements
            $('.TicketTemplateElement').show();
            // trigger group filter again
            $('#PortalGroupFilter').trigger('keyup');
        }

        // check if groups should be hidden because they are empty
        $('.PortalGroup').each(function() {
            if ($(this).find('.TicketTemplateElement:visible').length == 0)
                $(this).hide();
        });
    });
    $('#TicketTemplateFilterClear').on('click', function(e) {
        e.preventDefault();
        $('#TicketTemplateFilter').val('').trigger('keyup');
        $(this).css('visibility', 'hidden');
    });

//]]></script>
[% END %]
</div>
