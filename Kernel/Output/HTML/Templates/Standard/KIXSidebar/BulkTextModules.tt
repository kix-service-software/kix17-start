# --
# Copyright (C) 2006-2023 KIX Service Software GmbH, https://www.kixdesk.com
# --
# This software comes with ABSOLUTELY NO WARRANTY. For details, see
# the enclosed file LICENSE for license information (AGPL). If you
# did not receive this file, see https://www.gnu.org/licenses/agpl.txt.
# --


[% RenderBlockStart("BulkTextModuleTable") %]
<div id="BulkTextModules" class="WidgetSimple Expanded">
    <div class="Header">
        <div class="WidgetAction Toggle" title="[% Translate("Show or hide the content.") | html %]" id="BulkTextModulesBlockOpen" aria-controls="Core_UI_AutogeneratedID_0" aria-expanded="false"></div>
        <h2><span>[% Translate(Data.Title) | html %]</span></h2>
    </div>
    <div id="BulkTextModulesTable" class="Content">[% Data.TextModulesTable %]</div>
</div>
[% RenderBlockEnd("BulkTextModuleTable") %]

[% RenderBlockStart("BulkTextModuleBlock") %]
<div id="BulkTextModulesBlock">
[% RenderBlockStart("TextModuleContent") %]
    <input type="hidden" id="[% Data.ID | html %]_Text" value="[% Data.Text | html %]"/>
    <input type="hidden" id="[% Data.ID | html %]_Keywords" value="[% Data.Keywords | html %]"/>
    <input type="hidden" id="[% Data.ID %]_Subject" value="[% Data.Subject | html %]"/>
[% RenderBlockEnd("BulkTextModuleContent") %]
    <div id="BulkTextModulesSelection">
        <div id="BulkTextModulesSelectionContainer" class="JSTreeSelectionContainer">
[% RenderBlockStart("BulkTextModuleList") %]
            <div class="TextModule" id="[% Data.ID %]"><span>[% Data.Name %]</span></div>
[% RenderBlockEnd("BulkTextModuleList") %]
[% RenderBlockStart("BulkTextModuleCategory") %]
            [% Data.TextModuleSelection %]
[% RenderBlockEnd("BulkTextModuleCategory") %]
        </div>
        <div class="Clear"></div>
        <div class="BulkTextModulesFocus">
            <label>[% Translate("Focused on") %]:</label>
            <div id="BulkTextModulesFocusType" ></div>
            <input type="hidden" id="BulkTextModulesFocus" />
        </div>
        <div class="Clear"></div>
        <div id="BulkTextModulesButtons">
            <button type="button" class="Primary CallingAction" id="BulkTextModuleInsert" value="[% Translate("Double click on the text module, which should be added to the body") | html %]">[% Translate("Paste") | html %]</button>
            <button type="button" class="Primary CallingAction" id="BulkTextModulePreview" value="[% Translate("Move over the text module, which should be displayed") | html %]">[% Translate("Preview") | html %]</button>
        </div>
        <div id="BulkTextModulePreviewContainer" class="WidgetPopup Hidden">
            <div class="Header">
                <h2>
                    [% Translate("Preview") | html %]:
                    <span id="TMTitle"></span>
                </h2>
                <div class="ActionMenu">
                    <div class="WidgetAction Close" id="BulkTextModulePreviewClose">
                        <a title="[% Translate("Close") | html %]" href="">
                            <i class="fa fa-remove"></i>
                        </a>
                    </div>
                    <div class="Clear"></div>
                </div>
            </div>
            <div class="Content">
                <fieldset class="TableLike FixedLabelSmall">
                    <label>[% Translate("Subject") | html %]:</label>
                    <p id="TMSubject" class="Value"></p>
                    <div class="Clear"></div>
                    <label>[% Translate("Body") | html %]:</label>
                    <p id="TMBody" class="Value"></p>
                </fieldset>
            </div>
        </div>
    </div>
</div>
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
    Core.Config.AddConfig({
        // add config
        WebPath: '[% Config("Frontend::WebPath") %]',
        TextModulesDisplayType: '[% Data.DisplayType | html %]',
        FocusTypes: {
            'Email': '[% Translate("Email") %]',
            'Note': '[% Translate("Note") %]',
            'None': '[% Translate("None") %]',
        }
    });

    // init textmodules
    if ($('#BulkTextModulesTable').length) {
        Core.Agent.BulkTextModules.Init();
    }

//]]>
</script>
[% END %]
[% RenderBlockEnd("BulkTextModuleBlock") %]