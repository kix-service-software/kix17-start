# --
# Modified version of the work: Copyright (C) 2006-2023 KIX Service Software GmbH, https://www.kixdesk.com
# based on the original work of:
# Copyright (C) 2001-2023 OTRS AG, https://otrs.com/
# --
# This software comes with ABSOLUTELY NO WARRANTY. For details, see
# the enclosed file LICENSE for license information (AGPL). If you
# did not receive this file, see https://www.gnu.org/licenses/agpl.txt.
# --


[% RenderBlockStart("Properties") %]
<div class="LayoutPopup ARIARoleMain">
    <div class="Header">
        <p class="AsteriskExplanation">[% Translate("All fields marked with an asterisk (*) are mandatory.") | html %]</p>
    </div>
    <div class="Content">
        <div class="LayoutFixedSidebar SidebarLast">
[% RenderBlockStart("KIXSidebar") %]
            <div class="SidebarColumn SidebarColumnTab">
                [% Data.KIXSidebarContent %]
            </div>
[% RenderBlockEnd("KIXSidebar") %]
            <div class="ContentColumn">
                <form action="[% Env("CGIHandle") %]" method="post" enctype="multipart/form-data" name="compose" id="Compose" class="Validate PreventMultipleSubmits">
                    <input type="hidden" name="Action" value="[% Env("Action") %]"/>
                    <input type="hidden" name="Subaction" value="Store"/>
                    <input type="hidden" name="TicketID" value="[% Data.TicketID | html %]"/>
                    <input type="hidden" name="ReplyToArticle" value="[% Data.ReplyToArticle | html %]"/>
                    <input type="hidden" name="Expand" id="Expand" value=""/>
                    <input type="hidden" name="FormID" value="[% Data.FormID | html %]"/>
                    <input type="hidden" name="PretendAction" value="[% Data.PretendAction | html %]"/>
                    <input type="hidden" name="ImpactRC" id="ImpactRC" value="0"/>
                    <input type="hidden" name="PriorityRC" id="PriorityRC" value="0"/>
[% RenderBlockStart("WidgetTicketActions") %]
                    <div class="WidgetSimple Expanded">
                        <div class="Content">
                            <fieldset class="TableLike FixedLabel">
[% RenderBlockStart("Title") %]
                                <label class="Mandatory" for="Title"><span class="Marker">*</span>[% Translate("Title") | html %]:</label>
                                <div class="Field">
                                    <input type="text" id="Title" name="Title" value="[% Data.Title | html %]" class="W75pc Validate_Required [% Data.TitleInvalid | html %]" />
                                    <div id="TitleError" class="TooltipErrorMessage" ><p>[% Translate("This field is required.") | html %]</p></div>
                                    <div id="TitleServerError" class="TooltipErrorMessage"><p>[% Translate("This field is required.") | html %]</p></div>
                                </div>
                                <div class="Clear"></div>
[% RenderBlockEnd("Title") %]

[% RenderBlockStart("Type") %]
                                <label class="Mandatory" for="TypeID"><span class="Marker">*</span>[% Translate("Type") | html %]:</label>
                                <div class="Field">
                                    [% Data.TypeStrg %]
                                    <div id="TypeIDError" class="TooltipErrorMessage"><p>[% Translate("This field is required.") | html %]</p></div>
                                    <div id="TypeIDServerError" class="TooltipErrorMessage"><p>[% Translate("This field is required.") | html %]</p></div>
                                </div>
                                <div class="Clear"></div>
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
$('#TypeID').on('change', function (Event) {
    Core.AJAX.FormUpdate($('#Compose'), 'AJAXUpdate', 'TypeID', [ 'ServiceID', 'SLAID', 'NewOwnerID', 'NewResponsibleID', 'NewStateID', 'NewPriorityID' [% Data.DynamicFieldNamesStrg %] ]);
});
//]]></script>
[% END %]
[% RenderBlockEnd("Type") %]

[% RenderBlockStart("Queue") %]
                                <label for="NewQueueID">[% Translate("Queue") | html %]:</label>
                                <div class="Field">
                                    [% Data.QueuesStrg %]
                                    <div id="NewQueueIDError" class="TooltipErrorMessage" ><p>[% Translate("This field is required.") | html %]</p></div>
                                    <div id="NewQueueIDServerError" class="TooltipErrorMessage"><p>[% Translate("This field is required.") | html %]</p></div>
                                </div>
                                <div class="Clear"></div>
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
$('#NewQueueID').on('change', function (Event) {
    Core.AJAX.FormUpdate($('#Compose'), 'AJAXUpdate', 'NewQueueID', [ 'TypeID', 'ServiceID', 'NewOwnerID', 'NewResponsibleID', 'NewStateID', 'NewPriorityID', 'StandardTemplateID' [% Data.DynamicFieldNamesStrg %] ]);
});
//]]></script>
[% END %]
[% RenderBlockEnd("Queue") %]

[% RenderBlockStart("Service") %]
                                <label for="ServiceID">[% Translate("Service") | html %]:</label>
                                <div class="Field">
                                    [% Data.ServiceStrg %]
                                    <div id="ServiceIDServerError" class="TooltipErrorMessage"><p>[% Translate("Service invalid.") | html %]</p></div>
                                </div>
                                <div class="Clear"></div>
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
$('#ServiceID').on('change', function (Event) {
    Core.AJAX.FormUpdate($('#Compose'), 'AJAXUpdate', 'ServiceID', [ 'TypeID', 'SLAID', 'NewOwnerID', 'NewResponsibleID', 'NewStateID', 'NewPriorityID', 'NewQueueID' [% Data.DynamicFieldNamesStrg %] ], function() { Core.KIX4OTRS.ServiceAssignedQueue(); });
/*global ITSM: true */
    // show service incident state and signal for the selected service
    ITSM.Agent.IncidentState.ShowIncidentState({
        Action: '[% Env("Action") %]',
        PretendAction: '[% Data.PretendAction | html %]',
        TicketID: [% Data.TicketID | html %],
        ServiceID: $('#ServiceID').val()
    });
});
//]]></script>
[% END %]
                                <label for="ServiceIncidentStateContainer" style="display: none;">[% Translate("Service Incident State") | html %]:</label>
                                <div id="ServiceIncidentStateContainer" class="Field" style="display:none;">
                                    <div class="Value">
                                        <div class="Flag Small">
                                            <span id="ServiceIncidentStateSignal"></span>
                                        </div>
                                        <span id="ServiceIncidentState">&nbsp;</span>
                                    </div>
                                </div>
                                <div class="Clear"></div>
[% RenderBlockEnd("Service") %]

[% RenderBlockStart("ServiceMandatory") %]
                                <label class="Mandatory" for="ServiceID"><span class="Marker">*</span>[% Translate("Service") | html %]:</label>
                                <div class="Field">
                                    [% Data.ServiceStrg %]
                                    <div id="ServiceIDError" class="TooltipErrorMessage"><p>[% Translate("This field is required.") | html %]</p></div>
                                    <div id="ServiceIDServerError" class="TooltipErrorMessage"><p>[% Translate("Service invalid.") | html %]</p></div>
                                </div>
                                <div class="Clear"></div>
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
$('#ServiceID').on('change', function (Event) {
    Core.AJAX.FormUpdate($('#Compose'), 'AJAXUpdate', 'ServiceID', [ 'TypeID', 'SLAID', 'NewOwnerID', 'NewResponsibleID', 'NewStateID', 'NewPriorityID', 'NewQueueID' [% Data.DynamicFieldNamesStrg %] ], function() { Core.KIX4OTRS.ServiceAssignedQueue(); });
/*global ITSM: true */
    // show service incident state and signal for the selected service
    ITSM.Agent.IncidentState.ShowIncidentState({
        Action: '[% Env("Action") %]',
        PretendAction: '[% Data.PretendAction | html %]',
        TicketID: [% Data.TicketID | html %],
        ServiceID: $('#ServiceID').val()
    });
});
//]]></script>
[% END %]
                                <label for="ServiceIncidentStateContainer" style="display: none;">[% Translate("Service Incident State") | html %]:</label>
                                <div id="ServiceIncidentStateContainer" class="Field" style="display: none;">
                                    <div class="Value">
                                        <div class="Flag Small">
                                            <span id="ServiceIncidentStateSignal"></span>
                                        </div>
                                        <span id="ServiceIncidentState">&nbsp;</span>
                                    </div>
                                </div>
                                <div class="Clear"></div>
[% RenderBlockEnd("ServiceMandatory") %]

[% RenderBlockStart("SLA") %]
                                <label for="SLAID">[% Translate("Service Level Agreement") | html %]:</label>
                                <div class="Field">
                                    [% Data.SLAStrg %]
                                </div>
                                <div class="Clear"></div>
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
$('#SLAID').on('change', function (Event) {
    Core.AJAX.FormUpdate($('#Compose'), 'AJAXUpdate', 'SLAID', [ 'TypeID', 'ServiceID', 'NewOwnerID', 'NewResponsibleID', 'NewStateID', 'NewPriorityID' [% Data.DynamicFieldNamesStrg %] ]);
});
//]]></script>
[% END %]
[% RenderBlockEnd("SLA") %]

[% RenderBlockStart("SLAMandatory") %]
                                <label class="Mandatory" for="SLAID"><span class="Marker">*</span>[% Translate("Service Level Agreement") | html %]:</label>
                                <div class="Field">
                                    [% Data.SLAStrg %]
                                    <div id="SLAIDError" class="TooltipErrorMessage"><p>[% Translate("This field is required.") | html %]</p></div>
                                    <div id="SLAIDServerError" class="TooltipErrorMessage"><p>[% Translate("This field is required.") | html %]</p></div>
                                </div>
                                <div class="Clear"></div>
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
$('#SLAID').on('change', function (Event) {
    Core.AJAX.FormUpdate($('#Compose'), 'AJAXUpdate', 'SLAID', [ 'TypeID', 'ServiceID', 'NewOwnerID', 'NewResponsibleID', 'NewStateID', 'NewPriorityID' [% Data.DynamicFieldNamesStrg %] ]);
});
//]]></script>
[% END %]
[% RenderBlockEnd("SLAMandatory") %]

[% RenderBlockStart("Owner") %]
                                <label for="NewOwnerID">[% Translate("New Owner") | html %]:</label>
                                <div class="Field">
                                    [% Data.OwnerStrg %]
                                    <div id="NewOwnerIDError" class="TooltipErrorMessage"><p>[% Translate("Please set a new owner!") | html %]</p></div>
                                    <div id="NewOwnerIDServerError" class="TooltipErrorMessage"><p>[% Translate("Please set a new owner!") | html %]</p></div>
                                </div>
                                <div class="Clear"></div>
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
$('#NewOwnerID').on('change', function (Event) {
    Core.AJAX.FormUpdate($('#Compose'), 'AJAXUpdate', 'NewOwnerID', [ 'TypeID', 'ServiceID', 'SLAID', 'OldOwnerID', 'NewResponsibleID', 'NewStateID', 'NewPriorityID' [% Data.DynamicFieldNamesStrg %] ]);
    Core.Agent.TicketAction.SelectRadioButton('New','NewOwnerType');
});
$('#OldOwnerID').on('change', function (Event) {
    Core.AJAX.FormUpdate($('#Compose'), 'AJAXUpdate', 'OldOwnerID', [ 'TypeID', 'ServiceID', 'SLAID', 'NewOwnerID', 'NewResponsibleID', 'NewStateID', 'NewPriorityID' [% Data.DynamicFieldNamesStrg %] ]);
    Core.Agent.TicketAction.SelectRadioButton('Old','NewOwnerType');
});
//]]></script>
[% END %]
[% RenderBlockEnd("Owner") %]

[% RenderBlockStart("OwnerMandatory") %]
                                <label class="Mandatory" for="NewOwnerID"><span class="Marker">*</span>[% Translate("New Owner") | html %]:</label>
                                <div class="Field">
                                    [% Data.OwnerStrg %]
                                    <div id="NewOwnerIDError" class="TooltipErrorMessage"><p>[% Translate("Please set a new owner!") | html %]</p></div>
                                    <div id="NewOwnerIDServerError" class="TooltipErrorMessage"><p>[% Translate("Please set a new owner!") | html %]</p></div>
                                </div>
                                <div class="Clear"></div>
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
$('#NewOwnerID').on('change', function (Event) {
    Core.AJAX.FormUpdate($('#Compose'), 'AJAXUpdate', 'NewOwnerID', [ 'TypeID', 'ServiceID', 'SLAID', 'NewResponsibleID', 'NewStateID', 'NewPriorityID' [% Data.DynamicFieldNamesStrg %] ]);
});
//]]></script>
[% END %]
[% RenderBlockEnd("OwnerMandatory") %]

[% RenderBlockStart("Responsible") %]
                                <label for="NewResponsibleID">[% Translate("New Responsible") | html %]:</label>
                                <div class="Field">
                                    [% Data.ResponsibleStrg %]
                                </div>
                                <div class="Clear"></div>
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
$('#NewResponsibleID').on('change', function (Event) {
    Core.AJAX.FormUpdate($('#Compose'), 'AJAXUpdate', 'NewResponsibleID', [ 'TypeID', 'ServiceID', 'SLAID', 'NewOwnerID', 'NewStateID', 'NewPriorityID' [% Data.DynamicFieldNamesStrg %] ]);
});
//]]></script>
[% END %]
[% RenderBlockEnd("Responsible") %]

[% RenderBlockStart("State") %]
                                <label for="NewStateID">[% Translate("Next state") | html %]:</label>
                                <div class="Field">
                                    [% Data.StateStrg %]
                                </div>
                                <div class="Clear"></div>
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
$('#NewStateID').on('change', function (Event) {
    Core.AJAX.FormUpdate($('#Compose'), 'AJAXUpdate', 'NewStateID', ['TypeID', 'ServiceID', 'SLAID', 'NewOwnerID', 'NewResponsibleID', 'NewPriorityID' [% Data.DynamicFieldNamesStrg %] ]);
});
//]]></script>
[% END %]

[% RenderBlockStart("StatePending") %]
                                <label for="Date">[% Translate("Pending date") | html %]:</label>
                                <div class="Field">
                                    [% Data.DateString %]
                                    <div id="DayServerError" class="TooltipErrorMessage"><p>[% Translate("Date invalid!") | html %]</p></div>
                                    <div id="HourServerError" class="TooltipErrorMessage"><p>[% Translate("Date invalid!") | html %]</p></div>
                                    <p class="FieldExplanation">[% Translate("For all pending* states.") | html %]</p>
                                </div>
                                <div class="Clear"></div>
[% RenderBlockEnd("StatePending") %]
[% RenderBlockEnd("State") %]

# show the impact
[% RenderBlockStart("DynamicField_ITSMImpact") %]
                                <div class="Row Row_DynamicField_[% Data.Name | html %]">
                                    [% Data.Label %]
                                    <div class="Field">
                                        [% Data.Field %]
                                    </div>
                                    <div class="Clear"></div>
                                </div>
[% RenderBlockEnd("DynamicField_ITSMImpact") %]

[% RenderBlockStart("Priority") %]
                                <label for="NewPriorityID">[% Translate("Priority") | html %]:</label>
                                <div class="Field">
                                    [% Data.PriorityStrg %]
                                </div>
                                <div class="Clear"></div>
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
$('#NewPriorityID').on('change', function (Event) {
    Core.AJAX.FormUpdate($('#Compose'), 'AJAXUpdate', 'NewPriorityID', ['TypeID', 'ServiceID', 'SLAID', 'NewOwnerID', 'NewResponsibleID', 'NewStateID' [% Data.DynamicFieldNamesStrg %] ]);
});
//]]></script>
[% END %]
[% RenderBlockEnd("Priority") %]
                               <div class="EndOfForm"></div>
                            </fieldset>
                        </div>
                    </div>
[% RenderBlockEnd("WidgetTicketActions") %]

[% RenderBlockStart("WidgetDynamicFields") %]
                    <div class="WidgetSimple Expanded">
                        <div class="Content">
                            <fieldset class="TableLike FixedLabel">
[% RenderBlockStart("DynamicField") %]
                                <div class="Row Row_DynamicField_[% Data.Name | html %][% Data.Class | html %]">
                                    [% Data.Label %]
                                    <div class="Field">
                                        [% Data.Field %]
                                    </div>
                                    <div class="Clear"></div>
                                </div>
[% RenderBlockEnd("DynamicField") %]
                               <div class="EndOfForm"></div>
                            </fieldset>
                        </div>
                    </div>
[% RenderBlockEnd("WidgetDynamicFields") %]

[% RenderBlockStart("WidgetArticle") %]
                    <div class="WidgetSimple Expanded">
                        <div class="Content">
[% RenderBlockStart("InformAdditionalAgents") %]
                            <fieldset class="TableLike FixedLabel">
[% RenderBlockStart("InformAgent") %]
                                <label for="InformUserID">[% Translate("Inform agents") | html %]:</label>
                                <div class="Field">
                                    [% Data.OptionStrg %]
                                </div>
                                <div class="Clear"></div>
[% RenderBlockEnd("InformAgent") %]
[% RenderBlockStart("InvolvedAgent") %]
                                <label for="InvolvedUserID">[% Translate("Inform involved agents") | html %]:</label>
                                <div class="Field">
                                    [% Data.InvolvedAgentStrg %]
                                </div>
                                <div class="Clear"></div>
[% RenderBlockEnd("InvolvedAgent") %]
                                <div class="Field">
                                    <p class="FieldExplanation">
                                        [% Translate("Here you can select additional agents which should receive a notification regarding the new article.") %]
                                    </p>
                                </div>
                            </fieldset>
[% RenderBlockEnd("InformAdditionalAgents") %]
[% RenderBlockStart("InformAgentsWithoutSelection") %]
                            <fieldset class="TableLike FixedLabel">
                                <label>[% Translate("Text will also be received by") | html %]:</label>
                                <div class="Field">
                                    <input type="hidden" name="UserListWithoutSelection" value="[% Data.UserListWithoutSelection  | html %]" />
[% RenderBlockStart("InformAgentsWithoutSelectionSingleUser") %]
                                    <span title="[% Data.UserEmail %]">[% Data.UserFullname %]</span>[% RenderBlockStart("InformAgentsWithoutSelectionSingleUserSeparator") %],[% RenderBlockEnd("InformAgentsWithoutSelectionSingleUserSeparator") %]
[% RenderBlockEnd("InformAgentsWithoutSelectionSingleUser") %]
                                </div>
                                <div class="Clear"></div>
                            </fieldset>
[% RenderBlockEnd("InformAgentsWithoutSelection") %]
                            <fieldset class="TableLike FixedLabel">
[% RenderBlockStart("SubjectLabel") %]
                                <label for="Subject">[% Translate("Subject") | html %]:</label>
[% RenderBlockEnd("SubjectLabel") %]
[% RenderBlockStart("SubjectLabelMandatory") %]
                                <label class="Mandatory" for="Subject"><span class="Marker">*</span>[% Translate("Subject") | html %]:</label>
[% RenderBlockEnd("SubjectLabelMandatory") %]
                                <div class="Field">
                                    <input type="text" id="Subject" name="Subject" value="[% Data.Subject | html %]" class="W75pc Validate [% Data.SubjectInvalid %] [% Data.SubjectRequired %]"/>
                                    <div id="SubjectError" class="TooltipErrorMessage"><p>[% Translate("This field is required.") | html %]</p></div>
                                    <div id="SubjectServerError" class="TooltipErrorMessage"><p>[% Translate("This field is required.") | html %]</p></div>
                                </div>
                                <div class="Clear"></div>
[% RenderBlockStart("TicketOptions") %]
                                <label for="Options">[% Translate("Options") | html %]:</label>
                                <div class="Options Field">

<!-- OutputFilterHook_TicketOptionsBegin -->

<!-- OutputFilterHook_TicketOptionsEnd -->

                                </div>
                                <div class="Clear"></div>
[% RenderBlockEnd("TicketOptions") %]

<!-- OutputFilterHook_NoTicketOptionsFallback -->

[% RenderBlockStart("StandardTemplate") %]
                                <label for="StandardTemplateID">[% Translate("Text Template") | html %]:</label>
                                <div class="Field">
                                    [% Data.StandardTemplateStrg %]
                                    <p class="FieldExplanation">[% Translate("Setting a template will overwrite any text or attachment.") %]</p>
                                </div>
                                <div class="Clear"></div>
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
$('#StandardTemplateID').on('change', function (Event) {
    Core.Agent.TicketAction.ConfirmTemplateOverwrite('RichText', $(this), function () {
        Core.AJAX.FormUpdate($('#Compose'), 'AJAXUpdate', 'StandardTemplateID', ['RichTextField']);
    });
    return false;
});
//]]></script>
[% END %]
[% RenderBlockEnd("StandardTemplate") %]

[% RenderBlockStart("RichTextLabel") %]
                                <label for="RichText">[% Translate("Text") | html %]:</label>
[% RenderBlockEnd("RichTextLabel") %]
[% RenderBlockStart("RichTextLabelMandatory") %]
                                <label class="Mandatory" for="RichText"><span class="Marker">*</span>[% Translate("Text") | html %]:</label>
[% RenderBlockEnd("RichTextLabelMandatory") %]

                                <div id="RichTextField" class="RichTextField">
[% RenderBlockStart("RichText") %]
[% InsertTemplate("RichTextEditor.tt") %]
[% RenderBlockEnd("RichText") %]
                                    <textarea id="RichText" class="RichText Validate [% Data.BodyInvalid %] [% Data.BodyRequired %]" name="Body" rows="15" cols="[% Config("Ticket::Frontend::TextAreaNote") %]">[% Data.Body | html %]</textarea>
                                    <div id="RichTextError" class="TooltipErrorMessage"><p>[% Translate("This field is required.") | html %]</p></div>
                                    <div id="RichTextServerError" class="TooltipErrorMessage"><p>[% Translate("This field is required.") | html %]</p></div>
                                </div>
                                <div class="Clear"></div>

                                <label for="FileUpload">[% Translate("Attachment") | html %]:</label>
                                <div class="Field FileUpload">
                                    <ul>
[% RenderBlockStart("Attachment") %]
                                        <li>
                                            [% Data.Filename | html %] ([% Data.Filesize | html %])
                                            <button type="button" id="AttachmentDeleteButton[% Data.FileID | html %]" name="AttachmentDeleteButton[% Data.FileID | html %]" value="[% Translate("Delete") | html %]" class="SpacingLeft">[% Translate("Delete") | html %]</button>
                                            <input type="hidden" id="AttachmentDelete[% Data.FileID | html %]" name="AttachmentDelete[% Data.FileID | html %]" />
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
$('#AttachmentDeleteButton[% Data.FileID | html %]').on('click', function () {
    var $Form = $('#AttachmentDeleteButton[% Data.FileID | html %]').closest('form');
    $('#AttachmentDelete[% Data.FileID | html %]').val(1);
    Core.Form.Validate.DisableValidation($Form);
    $Form.trigger('submit');
});
//]]></script>
[% END %]
                                        </li>
[% RenderBlockEnd("Attachment") %]
                                        <li>
                                            <input name="FileUpload" id="FileUpload" type="file" multiple="multiple" size="30" />
                                            <input type="hidden" id="AttachmentUpload" name="AttachmentUpload" value="0" />
                                            <input type="hidden" id="UploadFinish" name="UploadFinish" value="0" />
                                        </li>
                                    </ul>
                                    <ul>
                                        <li>
                                            <input type="hidden" id="AttachmentDeleteID" name="AttachmentDeleteID" value="0" />
                                            <div id="FileList"></div>
                                        </li>
                                    </ul>
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
$('#FileUpload').on('change', function (Event) {
    // detect submitting form
    var SubmittingFileForm = $(this).closest('form');
    Core.Form.Validate.DisableValidation(SubmittingFileForm);
    // create and show loading message
    var LoaderIconFU = $('#loader');
    LoaderIconFU.html('L&auml;dt...<br/>');
    LoaderIconFU.show();
    // generate unique iframe name
    var FrameFUName = ("upload" + (new Date()).getTime());
    // join iframe name + html
    var UploadFileFrame = $('<iframe name="' + FrameFUName + '"></iframe>');
    // hide iframe
    UploadFileFrame.css("display", "none");
    // append uploadframe to body
    $('body:first').append(UploadFileFrame);
    // load iframe content
    UploadFileFrame.on("load", function(data) {

        // set timeout
        setTimeout(function() {

            // get return value
            $('#FileUpload').val(UploadFileFrame.contents().find('#Result').html());
            // remove iframe
            UploadFileFrame.remove();
            // hide ajax loader
            LoaderIconFU.hide();
            // load finished
            // set value of hidden field 'Upload' and set trigger event to change
            SubmittingFileForm.find('#UploadFinish').val('1').trigger('change');
        }, 1000);
    });
    // set form target to iframe
    SubmittingFileForm.attr('target', FrameFUName);
    // submit form
    SubmittingFileForm.find('#AttachmentUpload').val('1').end().submit();
    // remove target
    SubmittingFileForm.removeAttr('target');
    // for use with IE
    SubmittingFileForm.find('#AttachmentUpload').val('0');
    if($.browser.msie || $.browser.webkit) {
        SubmittingFileForm.find('#FileUpload').after(SubmittingFileForm.find('#FileUpload').clone(true)).remove();
    }
    // re-enable form validation
    Core.Form.Validate.EnableValidation(SubmittingFileForm);
});

$('#UploadFinish').on('change', function (Event) {
    var $ZoomForm = $(this).closest('form');
    Core.Form.EnableForm($ZoomForm);
    Core.AJAX.FormUpdate($ZoomForm, 'AJAXUpdateUpload', 'UploadFinish', ['FileList'], function() {

        $('.AttachmentDeleteButton').on('click', function () {
            var FileID = this.name.replace('AttachmentDelete', '');
            $('#AttachmentDeleteID').val( FileID );
            Core.AJAX.FormUpdate($ZoomForm, 'AJAXRemoveUpload', 'AttachmentDeleteID', [ 'AttachmentLI' + FileID ]);
        });
    });
});
//]]></script>
[% END %]
                                </div>
                                <div class="Clear"></div>

[% RenderBlockStart("ArticleType") %]
                                <label for="ArticleTypeID">[% Translate("Note type") | html %]:</label>
                                <div class="Field">
                                    [% Data.ArticleTypeStrg %]
                                </div>
                                <div class="Clear"></div>
[% RenderBlockEnd("ArticleType") %]

[% RenderBlockStart("TimeUnitsLabel") %]
                                <label for="TimeUnits">[% Translate("Time units") | html %] [% Translate(Config("Ticket::Frontend::TimeUnits")) | html %]:</label>
[% RenderBlockEnd("TimeUnitsLabel") %]
[% RenderBlockStart("TimeUnitsLabelMandatory") %]
                                <label class="Mandatory" for="TimeUnits"><span class="Marker">*</span>[% Translate("Time units") | html %] [% Translate(Config("Ticket::Frontend::TimeUnits")) | html %]:</label>
[% RenderBlockEnd("TimeUnitsLabelMandatory") %]
[% RenderBlockStart("TimeUnits") %]
                                <div class="Field">
                                    <input type="text" name="TimeUnits" id="TimeUnits" value="[% Data.TimeUnits | html %]" class="W50pc Validate_TimeUnits [% Data.TimeUnitsRequired | html %] [% Data.TimeUnitsInvalid | html %]"/>
                                    <div id="TimeUnitsError" class="TooltipErrorMessage"><p>[% Translate("Invalid time!") | html %]</p></div>
                                    <div id="TimeUnitsServerError" class="TooltipErrorMessage"><p>[% Translate("This field is required.") | html %]</p></div>
                                </div>
                                <div class="Clear"></div>
[% RenderBlockEnd("TimeUnits") %]
                               <div class="EndOfForm"></div>
                            </fieldset>
                        </div>
                    </div>
[% RenderBlockEnd("WidgetArticle") %]
                    <div class="Footer">
                        <button class="CallForAction Primary" id="submitRichText" accesskey="g" title="[% Translate("Submit") | html %] (g)" type="submit" value="[% Translate("Submit") | html %]"><span><i class="fa fa-check-square-o"></i> [% Translate("Submit") | html %]</span></button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
[% RenderBlockEnd("Properties") %]

#Layers
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
Core.Config.Set('Localization.Delete', '[% Translate("Delete") | html %]');
if ( Core.Agent.TicketAction && Core.KIX4OTRS.TicketZoomTabs && Core.KIX4OTRS.KIXSidebar ) {
    Core.Agent.TicketAction.Init();
    Core.KIX4OTRS.TicketZoomTabs.PopUpInit();
    Core.KIX4OTRS.KIXSidebar.Init('[% Env("AgentTicketZoomTabActionCommonSidebarWidth") %]','[% Env("Action") %]','TicketID=[% Data.TicketID | uri %]');
}
/*global ITSM: true */
// show service incident state and signal for the selected service (this part here is important if the page is reloaded due to e.g. attachment upload)
ITSM.Agent.IncidentState.ShowIncidentState({
    Action: '[% Env("Action") %]',
    PretendAction: '[% Data.PretendAction | html %]',
    TicketID: [% Data.TicketID | html %],
    ServiceID: $('#ServiceID').val()
});
//]]></script>
[% END %]
