# --
# Modified version of the work: Copyright (C) 2006-2022 c.a.p.e. IT GmbH, https://www.cape-it.de
# based on the original work of:
# Copyright (C) 2001-2022 OTRS AG, https://otrs.com/
# Copyright (C) 2019-2022 Rother OSS GmbH, https://otobo.de/
# --
# This software comes with ABSOLUTELY NO WARRANTY. This program is
# licensed under the AGPL-3.0 with patches licensed under the GPL-3.0.
# For details, see the enclosed files LICENSE (AGPL) and
# LICENSE-GPL3 (GPL3) for license information. If you did not receive
# this files, see https://www.gnu.org/licenses/agpl.txt (APGL) and
# https://www.gnu.org/licenses/gpl-3.0.txt (GPL3).
# --


[% RenderBlockStart("DocumentActionRow") %]
<ul class="Actions">
[% RenderBlockStart("DocumentActionRowBulk") %]
    <li id="BulkAction" class="AlwaysPresent Inactive [% Data.CSS | html %]"><a href="#">[% Translate(Data.Name) | html %]</a></li>
[% RenderBlockEnd("DocumentActionRowBulk") %]

[% RenderBlockStart("DocumentActionRowLastColumnFilter") %]
    <li class=""><a href="[% Env("Baselink") %]Action=[% Env("Action") %];DeleteFilters=DeleteFilters">[% Translate("Reset overview") | html %]</a></li>
[% RenderBlockEnd("DocumentActionRowLastColumnFilter") %]

[% RenderBlockStart("DocumentActionRowItem") %]
    <li class="[% Data.CSS | html %]"><a href="#">[% Translate(Data.Name) | html %]</a></li>
[% RenderBlockEnd("DocumentActionRowItem") %]
</ul>
[% RenderBlockEnd("DocumentActionRow") %]

[% RenderBlockStart("DocumentContent") %]
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
    Core.UI.ActionRow.Init();

    $('a.AsPopup').on('click', function (Event) {
        Core.UI.Popup.OpenPopup($(this).attr('href'), 'Action');
        return false;
    });

    $('.ColumnFilter').on('change', function (Event) {
        var URL, ColumnFilter, NewColumnFilterStrg, MyRegEx, SessionInformation;

        // define variables
        URL = Core.Config.Get('Baselink') + 'Action=' + '[% Env("Action") %]' + ';[% Data.LinkPage %]';
        SessionInformation = Core.App.GetSessionInformation();
        $.each(SessionInformation, function (Key, Value) {
            URL += encodeURIComponent(Key) + '=' + encodeURIComponent(Value) + ';';
        });
        ColumnFilter = $(this)[0].name;
        NewColumnFilterStrg = $(this)[0].name + '=' + $(this).val() + ';';
        MyRegEx = new  RegExp(ColumnFilter+"=[^;]*;");

        // check for already set parameter and replace
        if (URL.match(MyRegEx)) {
            URL = URL.replace(MyRegEx, NewColumnFilterStrg);
        }

        // otherwise add the new column filter
        else {
            URL = URL + NewColumnFilterStrg;
        }

        // redirect
        window.location.href =  URL;
    });
//]]></script>
[% END %]

<div id="OverviewBody" class="Overview TicketList">
[% RenderBlockStart("NoTicketFound") %]
    <div id="EmptyMessageSmall">
        [% Translate("No ticket data found.") | html %]
    </div>
[% RenderBlockEnd("NoTicketFound") %]
    <form action="[% Env("CGIHandle") %]" method="post" enctype="multipart/form-data" name="matrix">
        <input type="hidden" name="Action" value="AgentTicketBulk"/>
        <input type="hidden" name="Subaction" value="TicketLocking"/>
        <input type="hidden" name="TicketID" value=""/>
        <input type="hidden" name="LastColumnFilter" id="LastColumnFilter" value="[% Data.LastColumnFilter | html %]"/>
[% RenderBlockStart("OverviewTable") %]
        <table class="TableSmall NoCellspacing">
[% RenderBlockStart("TableHeader") %]
            <thead>
                <tr>

[% RenderBlockStart("GeneralOverviewHeader") %]

[% RenderBlockStart("BulkNavBar") %]
                    <th class="Checkbox">
                        <input type="checkbox" class="Checkbox [% Data.SelectedAll %]" title="[% Translate("Select all") | html %]" id="SelectAllTickets" autocomplete="off" [% Data.ItemALLChecked %]/>
                    </th>
[% RenderBlockEnd("BulkNavBar") %]
[% RenderBlockStart("OverviewNavBarPageFlag") %]
                    <th class="OverviewHeader [% Data.CSS | html %]">
[% RenderBlockStart("OverviewNavBarPageFlagLink") %]
                        <a name="OverviewControl" href="[% Env("Baselink") %]Action=[% Env("Action") %];[% Data.LinkSort %];SortBy=[% Data.Name | uri %];OrderBy=[% Data.OrderBy | uri %]" title="[% Translate(Data.Name) | html %]">
                            <em class="PrintOnly">Text{"[% Data.Name %]"}</em>
                        </a>
[% RenderBlockEnd("OverviewNavBarPageFlagLink") %]
[% RenderBlockStart("OverviewNavBarPageFlagEmpty") %]
                        <span title="[% Translate(Data.Name) | html %]">
                            <em class="PrintOnly">[% Translate(Data.Name) %]</em>
                        </span>
[% RenderBlockEnd("OverviewNavBarPageFlagEmpty") %]
                    </th>
[% RenderBlockEnd("OverviewNavBarPageFlag") %]

[% RenderBlockStart("OverviewNavBarPageTicketHeader") %]
[% RenderBlockStart("OverviewNavBarPageTicketNumber") %]
                    <th class="OverviewHeader [% Data.CSS | html %]">
                        <a name="OverviewControl" href="[% Env("Baselink") %]Action=[% Env("Action") %];[% Data.LinkSort %];SortBy=TicketNumber;OrderBy=[% Data.OrderBy | uri %]" title="[% Translate(Data.Title) | html %]">[% Config("Ticket::Hook") %]</a>
                    </th>
[% RenderBlockEnd("OverviewNavBarPageTicketNumber") %]
[% RenderBlockStart("OverviewNavBarPageColumn") %]
                    <th class="OverviewHeader [% Data.HeaderColumnName | html %] [% Data.CSS | html %]">

[% RenderBlockStart("OverviewNavBarPageColumnFilter") %]
                        <a href="#" class="ColumnSettingsTrigger" title="[% Data.FilterTitle | html %]">
                            <i class="fa fa-filter"></i>
                        </a>
                        <div class="ColumnSettingsContainer DontPrint">
                            <div class="ColumnSettingsBox">
                                [% Data.ColumnFilterStrg %]

[% RenderBlockStart("ContentLargeTicketGenericHeaderColumnFilterLinkCustomerUserSearch") %]
                                <input type="text" class="CustomerUserAutoComplete" autocomplete="off" />
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
Core.Config.Set('CustomerUserAutocomplete.QueryDelay', "[% Data.queryDelay | html %]");
Core.Config.Set('CustomerUserAutocomplete.MaxResultsDisplayed', "[% Data.maxResultsDisplayed | html %]");
Core.Config.Set('CustomerUserAutocomplete.MinQueryLength', "[% Data.minQueryLength | html %]");
Core.Agent.TableFilters.InitCustomerUserAutocomplete( $(".CustomerUserAutoComplete") );
//]]></script>
[% END %]
[% RenderBlockEnd("ContentLargeTicketGenericHeaderColumnFilterLinkCustomerUserSearch") %]

                            </div>
                        </div>
                        <span class="Gray" title="[% Data.Title | html %]">[% Data.ColumnNameTranslated | html %]</span>
[% RenderBlockEnd("OverviewNavBarPageColumnFilter") %]

[% RenderBlockStart("OverviewNavBarPageColumnFilterLink") %]
                        <a href="#" class="ColumnSettingsTrigger" title="[% Data.FilterTitle | html %]">
                            <i class="fa fa-filter"></i>
                        </a>
                        <div class="ColumnSettingsContainer DontPrint">
                            <div class="ColumnSettingsBox">
                                [% Data.ColumnFilterStrg %]

[% RenderBlockStart("ContentLargeTicketGenericHeaderColumnFilterLinkCustomerIDSearch") %]
                                <input type="text" class="CustomerIDAutoComplete" autocomplete="off" />
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
Core.Config.Set('CustomerIDAutocomplete.QueryDelay', "[% Data.queryDelay | html %]");
Core.Config.Set('CustomerIDAutocomplete.MaxResultsDisplayed', "[% Data.maxResultsDisplayed | html %]");
Core.Config.Set('CustomerIDAutocomplete.MinQueryLength', "[% Data.minQueryLength | html %]");
Core.Agent.TableFilters.InitCustomerIDAutocomplete( $(".CustomerIDAutoComplete") );
//]]></script>
[% END %]
[% RenderBlockEnd("ContentLargeTicketGenericHeaderColumnFilterLinkCustomerIDSearch") %]

[% RenderBlockStart("ContentLargeTicketGenericHeaderColumnFilterLinkUserSearch") %]
                                <input type="text" class="UserAutoComplete" autocomplete="off" />
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
Core.Config.Set('UserAutocomplete.QueryDelay', "[% Data.queryDelay | html %]");
Core.Config.Set('UserAutocomplete.MaxResultsDisplayed', "[% Data.maxResultsDisplayed | html %]");
Core.Config.Set('UserAutocomplete.MinQueryLength', "[% Data.minQueryLength | html %]");
Core.Agent.TableFilters.InitUserAutocomplete( $(".UserAutoComplete") );
//]]></script>
[% END %]
[% RenderBlockEnd("ContentLargeTicketGenericHeaderColumnFilterLinkUserSearch") %]
                            </div>
                        </div>
                        <a name="OverviewControl" href="[% Env("Baselink") %]Action=[% Env("Action") %];[% Data.LinkSort %];SortBy=[% Data.ColumnName | uri %];OrderBy=[% Data.OrderBy | uri %]" title="[% Translate(Data.Title) | html %]">[% Data.ColumnNameTranslated | html %]</a>
[% RenderBlockEnd("OverviewNavBarPageColumnFilterLink") %]

[% RenderBlockStart("OverviewNavBarPageColumnLink") %]
                        <a name="OverviewControl" href="[% Env("Baselink") %]Action=[% Env("Action") %];[% Data.LinkSort %];SortBy=[% Data.ColumnName | uri %];OrderBy=[% Data.OrderBy | uri %]" title="[% Translate(Data.Title) | html %]">[% Data.ColumnNameTranslated | html %]</a>
[% RenderBlockEnd("OverviewNavBarPageColumnLink") %]

[% RenderBlockStart("OverviewNavBarPageColumnEmpty") %]
                        <span class="Gray" title="[% Data.Title | html %]">[% Data.ColumnNameTranslated | html %]</span>
[% RenderBlockEnd("OverviewNavBarPageColumnEmpty") %]

                    </th>
[% RenderBlockEnd("OverviewNavBarPageColumn") %]
[% RenderBlockEnd("OverviewNavBarPageTicketHeader") %]

[% RenderBlockStart("OverviewNavBarPageDynamicField") %]
                    <th class="OverviewHeader [% Data.HeaderColumnName | html %] DynamicField Last [% Data.CSS | html %]">
[% RenderBlockStart("OverviewNavBarPageDynamicFieldSortable") %]
                        <a name="OverviewControl" href="[% Env("Baselink") %]Action=[% Env("Action") %];[% Data.LinkSort %];SortBy=DynamicField_[% Data.DynamicFieldName | uri %];OrderBy=[% Data.OrderBy | uri %]" title="[% Data.Title | html %]">[% Data.Label | html %]</a>
[% RenderBlockEnd("OverviewNavBarPageDynamicFieldSortable") %]
[% RenderBlockStart("OverviewNavBarPageDynamicFieldNotSortable") %]
                        <span class="Gray" title="[% Data.Title | html %]">[% Data.Label | html %]</span>
[% RenderBlockEnd("OverviewNavBarPageDynamicFieldNotSortable") %]

[% RenderBlockStart("OverviewNavBarPageDynamicFieldFiltrableSortable") %]
                        <a href="#" class="ColumnSettingsTrigger" title="[% Data.FilterTitle | html %]">
                            <i class="fa fa-filter"></i>
                        </a>
                        <div class="ColumnSettingsContainer DontPrint">
                            <div class="ColumnSettingsBox">
                                [% Data.ColumnFilterStrg %]
                            </div>
                        </div>
                        <a name="OverviewControl" href="[% Env("Baselink") %]Action=[% Env("Action") %];[% Data.LinkSort %];SortBy=DynamicField_[% Data.DynamicFieldName | uri %];OrderBy=[% Data.OrderBy | uri %]" title="[% Data.Title | html %]">[% Data.Label | html %]</a>
[% RenderBlockEnd("OverviewNavBarPageDynamicFieldFiltrableSortable") %]

[% RenderBlockStart("OverviewNavBarPageDynamicFieldFiltrableNotSortable") %]
                        <a href="#" class="ColumnSettingsTrigger" title="[% Data.FilterTitle | html %]">
                            <i class="fa fa-filter"></i>
                        </a>
                        <div class="ColumnSettingsContainer DontPrint">
                            <div class="ColumnSettingsBox">
                                [% Data.ColumnFilterStrg %]
                            </div>
                        </div>
                        <span class="Gray" title="[% Data.Title | html %]">[% Data.Label | html %]</span>
[% RenderBlockEnd("OverviewNavBarPageDynamicFieldFiltrableNotSortable") %]

                    </th>
[% RenderBlockEnd("OverviewNavBarPageDynamicField") %]

[% RenderBlockEnd("GeneralOverviewHeader") %]

[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
$('.OverviewHeader').off('click').on('click', '.ColumnSettingsTrigger', function() {

    var $TriggerObj = $(this),
        FilterName;

    if ($TriggerObj.hasClass('Active')) {

        $TriggerObj
            .next('.ColumnSettingsContainer')
            .find('.ColumnSettingsBox')
            .fadeOut('fast', function() {
                $TriggerObj.removeClass('Active');
            });
    }
    else {

        // slide up all open settings widgets
        $('.ColumnSettingsTrigger')
            .next('.ColumnSettingsContainer')
            .find('.ColumnSettingsBox')
            .fadeOut('fast', function() {
                $(this).parent().prev('.ColumnSettingsTrigger').removeClass('Active');
            });

        // show THIS settings widget
        $TriggerObj
            .next('.ColumnSettingsContainer')
            .find('.ColumnSettingsBox')
            .fadeIn('fast', function() {

                $TriggerObj.addClass('Active');

                // refresh filter dropdown
                FilterName = $TriggerObj
                    .next('.ColumnSettingsContainer')
                    .find('select')
                    .attr('name');

                if (
                        $TriggerObj.closest('th').hasClass('CustomerID') ||
                        $TriggerObj.closest('th').hasClass('CustomerUserID') ||
                        $TriggerObj.closest('th').hasClass('Responsible') ||
                        $TriggerObj.closest('th').hasClass('Owner')
                    ) {

                    if (!$TriggerObj.parent().find('.SelectedValue').length) {
                        Core.AJAX.FormUpdate($('#Nothing'), 'AJAXFilterUpdate', FilterName, [ FilterName ], function() {
                            var AutoCompleteValue = $TriggerObj
                                    .next('.ColumnSettingsContainer')
                                    .find('select')
                                    .val(),
                                AutoCompleteText  = $TriggerObj
                                    .next('.ColumnSettingsContainer')
                                    .find('select')
                                    .find('option:selected')
                                    .text();

                            if (AutoCompleteValue !== 'DeleteFilter') {

                                $TriggerObj
                                    .next('.ColumnSettingsContainer')
                                    .find('select')
                                    .after('<span class="SelectedValue Hidden"><a href="#">x</a>' + AutoCompleteText + ' (' + AutoCompleteValue + ')</span>')
                                    .parent()
                                    .find('.SelectedValue')
                                    .find('a')
                                    .off()
                                    .on('click', function() {
                                        $(this)
                                            .closest('.ColumnSettingsContainer')
                                            .find('select')
                                            .val('DeleteFilter')
                                            .trigger('change');

                                        return false;
                                    });
                            }
                        });
                    }
                }
                else {
                    Core.AJAX.FormUpdate($('#ColumnFilterAttributes'), 'AJAXFilterUpdate', FilterName, [ FilterName ]);
                }
        });
    }

    return false;
});

//]]></script>
[% END %]
                </tr>
            </thead>
[% RenderBlockEnd("TableHeader") %]
[% RenderBlockStart("TableBody") %]
            <tbody>
[% RenderBlockStart("Record") %]
                <tr id="TicketID_[% Data.TicketID | html %]" class="MasterAction TicketOverviewHighlightClass [% Data.HighlightClass %]">

[% RenderBlockStart("GeneralOverviewRow") %]

[% RenderBlockStart("Bulk") %]
                    <td class="Checkbox">
                        <input class="Checkbox SelectItem" type="checkbox" name="TicketID" title="[% Translate("Select this ticket") | html %]" value="[% Data.TicketID | html %]"  autocomplete="off" [% Data.ItemChecked %]]/>
                    </td>
[% RenderBlockEnd("Bulk") %]
[% RenderBlockStart("ContentLargeTicketGenericRowMeta") %]
                    <td class="[% Data.ClassTable | html %]" title="[% Translate(Data.Title) | html %]">
[% RenderBlockStart("ContentLargeTicketGenericRowMetaImage") %]
                        <div class="[% Data.Class | html %] Small" title="[% Translate(Data.Title) | html %]">
                            <span class="[% Data.ClassSpan | html %]">
                                <i class="fa fa-star"></i>
                                <i class="fa fa-star"></i>
                                <em>[% Translate(Data.Title) | html %]</em>
                            </span>
                        </div>
[% RenderBlockEnd("ContentLargeTicketGenericRowMetaImage") %]
                    </td>
[% RenderBlockEnd("ContentLargeTicketGenericRowMeta") %]

[% RenderBlockStart("RecordTicketData") %]
[% RenderBlockStart("RecordTicketNumber") %]
                    <td>
                        <a href="[% Env("Baselink") %]Action=AgentTicketZoom;TicketID=[% Data.TicketID | uri %]" title="[% Data.Title | html %]" class="MasterActionLink">[% Data.TicketNumber %]</a>
                    </td>
[% RenderBlockEnd("RecordTicketNumber") %]
[% RenderBlockStart("RecordEscalationTime") %]
                    <td>
                        <div title="[% Translate("Service Time") | html %]: [% Data.EscalationTimeWorkingTime | html %] - [% Data.EscalationDestinationDate | Localize("TimeShort") %]" class="[% Data.EscalationClass | html %]">[% Data.EscalationTimeHuman | html %]<br/>[% Data.UpdateTimeDestinationDate | Localize("TimeShort") %]</div>
                    </td>
[% RenderBlockEnd("RecordEscalationTime") %]
[% RenderBlockStart("RecordOwner") %]
                    <td>
                        <div title="[% Data.UserFullname | html %] ([% Data.Owner | html %])">[% Data.UserFullname | truncate(30) | html %]</div>
                    </td>
[% RenderBlockEnd("RecordOwner") %]
[% RenderBlockStart("RecordResponsible") %]
                    <td>
                        <div title="[% Data.ResponsibleInfo.UserFullname | html %] ([% Data.Responsible | html %])">[% Data.ResponsibleInfo.UserFullname | truncate(30) | html %]</div>
                    </td>
[% RenderBlockEnd("RecordResponsible") %]
[% RenderBlockStart("RecordCustomerID") %]
                    <td>
                        <a href="[% Env("Baselink") %]Action=AgentTicketCustomer;TicketID=[% Data.TicketID | uri %]" class="AsPopup">
                            <span title="[% Data.CustomerID | html %]">[% Data.CustomerID | truncate(15) | html %]</span>
                        </a>
                    </td>
[% RenderBlockEnd("RecordCustomerID") %]
[% RenderBlockStart("RecordFrom") %]
                    <td>
                        <div title="[% Data.From | html %]">[% Data.FromRealname | truncate(30) | html %]</div>
                    </td>
[% RenderBlockEnd("RecordFrom") %]
[% RenderBlockStart("RecordLastCustomerSubject") %]
                    <td>
                        <div title="[% Data.Subject | html %]">[% Data.Subject | truncate(30) | html %]</div>
                    </td>
[% RenderBlockEnd("RecordLastCustomerSubject") %]
[% RenderBlockStart("RecordTicketTitle") %]
                    <td>
                        <div title="[% Data.Title | html %]">[% Data.Title | truncate(30) | html %]</div>
                    </td>
[% RenderBlockEnd("RecordTicketTitle") %]
[% RenderBlockStart("RecordTicketCreatedBy") %]
                    <td>
                        <div title="[% Data.UserFirstname | html %] [% Data.UserLastname | html %] ([% Data.UserLogin | html %])">[% Data.UserFullname | truncate(30) | html %]</div>
                    </td>
[% RenderBlockEnd("RecordTicketCreatedBy") %]
[% RenderBlockStart("RecordFromLastCustomerSubject") %]
                    <td>
                        <div title="[% Data.From | html %]">[% Data.FromRealname | truncate(30) | html %]</div>
                        <div title="[% Data.Subject | html %]">[% Data.Subject | truncate(30) | html %]</div>
                    </td>
[% RenderBlockEnd("RecordFromLastCustomerSubject") %]
[% RenderBlockStart("RecordFromTicketTitle") %]
                    <td>
                        <div title="[% Data.From | html %]">[% Data.FromRealname | truncate(30) | html %]</div>
                        <div title="[% Data.Title | html %]">[% Data.Title | truncate(30) | html %]</div>
                    </td>
[% RenderBlockEnd("RecordFromTicketTitle") %]
[% RenderBlockStart("RecordMarkedAs") %]
                    <td>
[% RenderBlockStart("RecordMarkedAsFlag") %]
                        <div class="ArticleFlagIcon" style="[% Data.CSS | html %]">
                            <i class="fa fa-[% Data.Icon | html %]"></i> [% Data.FlagSubject | truncate(30) | html %]
                            <span class="Hidden">[% Data.Tooltip | truncate(150) | html %]</span>
                        </div>
[% RenderBlockEnd("RecordMarkedAsFlag") %]
                    </td>
[% RenderBlockEnd("RecordMarkedAs") %]
[% RenderBlockStart("RecordTicketColumn") %]
                    <td>
                        <div title="[% Data.GenericValue | html %]">[% Data.GenericValue | truncate(30) | html %]</div>
                    </td>
[% RenderBlockEnd("RecordTicketColumn") %]
[% RenderBlockStart("RecordTicketColumnTranslatable") %]
                    <td>
                        <div title="[% Translate(Data.GenericValue) | html %]">[% Translate(Data.GenericValue) | html %]</div>
                    </td>
[% RenderBlockEnd("RecordTicketColumnTranslatable") %]
[% RenderBlockStart("RecordTicketColumnTime") %]
                    <td>
### Patch licensed under the GPL-3.0, Copyright (C) 2019-2022 Rother OSS GmbH, https://otobo.de/ ###
#                        <div title="[% Data.GenericValue | Localize("TimeShort") | html %]">[% Data.GenericValue | Localize("TimeShort") %]</div>
                        <div title="[% Data.GenericValue | Localize("TimeShort") | html %]">[% Data.GenericValue | Localize("TimeShort") | html %]</div>
### EO Patch licensed under the GPL-3.0, Copyright (C) 2019-2022 Rother OSS GmbH, https://otobo.de/ ###
                    </td>
[% RenderBlockEnd("RecordTicketColumnTime") %]
[% RenderBlockStart("RecordTicketColumnEscalation") %]
                    <td>
                        <div title="[% Data.GenericValue | html %]" class="[% Data.Class | html %]">[% Data.GenericValue | html %]</div>
                    </td>
[% RenderBlockEnd("RecordTicketColumnEscalation") %]
[% RenderBlockEnd("RecordTicketData") %]

[% RenderBlockStart("RecordDynamicField") %]
                    <td>
                        <div title="[% Data.Title | html %]">
[% RenderBlockStart("RecordDynamicFieldLink") %]
                            [% Data.HTMLLink %]
[% RenderBlockEnd("RecordDynamicFieldLink") %]
[% RenderBlockStart("RecordDynamicFieldPlain") %]
                            [% Data.Value %]
[% RenderBlockEnd("RecordDynamicFieldPlain") %]
                        </div>
                    </td>
[% RenderBlockEnd("RecordDynamicField") %]

[% RenderBlockEnd("GeneralOverviewRow") %]
                </tr>

[% RenderBlockStart("DocumentReadyActionRowAdd") %]
[% FOREACH MenuElement IN Data.Data %]
    [% MenuElement.Link = Interpolate(MenuElement.Link) %]
[% END %]
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
    Core.UI.ActionRow.AddActions($('#TicketID_[% Data.TicketID | html %]'), [% JSON(Data.Data) %]);
//]]></script>
[% END %]
[% RenderBlockEnd("DocumentReadyActionRowAdd") %]

[% RenderBlockEnd("Record") %]
            </tbody>
[% RenderBlockEnd("TableBody") %]
        </table>
[% RenderBlockEnd("OverviewTable") %]
    </form>
</div>
<div class="ArticleFlagIconTooltip Hidden"></div>
[% RenderBlockStart("DocumentReadyStart") %]
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
    Core.UI.InitCheckboxSelection($('table td.Checkbox'));
    $('.MasterAction').on('click', function (Event) {
        var $MasterActionLink = $(this).find('.MasterActionLink');
        // prevent MasterAction on Dynamic Fields links
        if ($(Event.target).hasClass('DynamicFieldLink')) {
            return true;
        }
        // only act if the link was not clicked directly
        if (Event.target !== $MasterActionLink.get(0)) {
            if (Event.ctrlKey || Event.metaKey) {
                window.open($MasterActionLink.attr('href'));
            }
            else {
                window.location = $MasterActionLink.attr('href');
            }
            return false;
        }
    });
//]]></script>
[% END %]
[% RenderBlockEnd("DocumentReadyStart") %]
[% RenderBlockEnd("DocumentContent") %]

[% RenderBlockStart("DocumentMenuItemMoveForm") %]
<li class="[% Data.Class | html %]">
    <form title="[% Translate("Move ticket to a different queue") | html %]" action="[% Env("CGIHandle") %]" method="post">
        <input type="hidden" name="Action" value="AgentTicketMove"/>
        <input type="hidden" name="QueueID" value="[% Data.QueueID | html %]"/>
        <input type="hidden" name="TicketID" value="[% Data.TicketID | html %]"/>
        <label for="DestQueueID" class="InvisibleText">[% Translate("Change queue") | html %]:</label>
        [% Data.MoveQueuesStrg %]
    </form>
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
    $('.OverviewActions').on('change', 'select[name=DestQueueID]', function (Event) {
        if ($(this).val() > 0) {
            $(this).closest('form').submit();
        }
    });
//]]></script>
[% END %]
</li>
[% RenderBlockEnd("DocumentMenuItemMoveForm") %]

[% RenderBlockStart("DocumentColumnFilterForm") %]
<form title="[% Translate("Column Filters Form") | html %]" action="[% Env("CGIHandle") %]" method="post" name="ColumnFilterAttributes" id="ColumnFilterAttributes">
[% RenderBlockStart("DocumentColumnFilterFormElement") %]
    <input type="hidden" name="[% Data.ElementName | html %]" value="[% Data.ElementValue | html %]"/>
[% RenderBlockEnd("DocumentColumnFilterFormElement") %]
</form>
[% RenderBlockEnd("DocumentColumnFilterForm") %]

[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
// Show and hide article flag icon tooltips
$('.ArticleFlagIcon').on('mouseover',function(event) {
    if ( $(this).children('span').html() != '' ) {
        var Left = ( (event.pageX + 200 ) < document.body.clientWidth ) ? (event.pageX + 15) : (event.pageX - 30),
            Top  = ( (event.pageY + 200 ) < document.body.clientHeight ) ? (event.pageY + 15) : (event.pageY - 30);
        $('.ArticleFlagIconTooltip')
            .removeClass('Hidden')
            .css({"left": Left, "top": Top })
            .html($(this).children('span').html());
    }
});
$('.ArticleFlagIcon').on('mouseout',function(){
    $('.ArticleFlagIconTooltip').addClass('Hidden');
});

$('#SelectAllTickets').on('click', function (Event) {
    var $Element = $(this);

    if ( $(this).hasClass('SelectAllItemsPages')
         && $(this).prop('checked')
    ) {
        Core.UI.ActionRow.InitShowContentDialog(
            {
                Element: $Element,
                ID: 'SelectTicketsSettingsDialogContainer',
                Title: '[% Translate("Ticket selection") %]',
                Content: '<p style="text-align: center;">[% Translate("From which page should be selected the tickets.")%]</p>',
                Label: [
                    '[% Translate("Current Page") %]',
                    '[% Translate("All Pages") %]'
                ]
            }, 'SelectDialog');
        $('.Dialog > .Header .Close').on('click',function(event){
            event.preventDefault();
            event.stopPropagation();
            $('#SelectAllTickets').prop('checked',false);
        });
    } else if ( $(this).prop('checked') ) {
        Core.UI.ActionRow.UpdateSelectItems($Element, false);
    } else {
        Core.UI.ActionRow.UpdateSelectItems($Element, true);
    }
});

Core.Config.Set('BulkDialogButtonYes', '[% Translate("Yes") %]');
Core.Config.Set('BulkDialogButtonNo', '[% Translate("No") %]');
Core.Config.Set('BulkDialog', '<p style="text-align: center;">[% Translate("You have selected a larger number (###) of objects. Please note that this can lead to a loss of performance! Do you want to continue?") %]</p>');
Core.Config.Set('BulkDialogTitle', '[% Translate("Warning") %]');

[% RenderBlockStart("BulkActivate") %]
Core.UI.ActionRow.TriggerUpdateActionRow();
[% RenderBlockEnd("BulkActivate") %]
//]]></script>
[% END %]
