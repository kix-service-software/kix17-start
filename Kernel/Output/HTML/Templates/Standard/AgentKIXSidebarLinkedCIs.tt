# --
# Copyright (C) 2006-2023 c.a.p.e. IT GmbH, https://www.cape-it.de
# --
# This software comes with ABSOLUTELY NO WARRANTY. For details, see
# the enclosed file LICENSE for license information (AGPL). If you
# did not receive this file, see https://www.gnu.org/licenses/agpl.txt.
# --


<div id="KIXSidebarLinkedConfigItemDialog" class="Hidden">
    <div style="margin-bottom:5px">[% Translate("Choose the attribute of the config items to filter. Click on the plus next to the selection to add an attribute filter.") | html %]</div>
    <strong>
        <u>[% Translate("PLEASE NOTE") | html %]:</u>
    </strong>
    <br />
    <div style="margin-top:5px">[% Translate("Only attributes of the following types are shown in the list") | html %]: <strong>[% Data.ValidFilterAttributeTypes | html %]</strong></div>
    <br/>
    <form action="[% Env("CGIHandle") %]" method="post" id="KIXSidebarLinkedConfigItemDialogForm" name="KIXSidebarLinkedConfigItemDialogForm">
        <input type="hidden" value="KIXSidebarLinkedCIsAJAXHandler" name="Action"/>
        <input type="hidden" value="SetFilter" name="Subaction"/>
        <input type="hidden" value="[% Data.TicketID | html %]" name="TicketID" id="KIXSidebarTicketID"/>
        <input type="hidden" value="" name="SelectedSearchFields" id="SelectedSearchFields" />
        <input type="hidden" value="[% Data.CustomerUserID %]" name="KIXSidebarCustomerUserID" id="KIXSidebarCustomerUserID" />
        <input type="hidden" value="[% Data.CustomerID %]" name="KIXSidebarCustomerID" id="KIXSidebarCustomerID" />
        <fieldset class="TableLike"  style="width:500px;" id="KIXSidebarLinkedConfigItemAttributes">
            <label for="KIXSidebarLinkedCIAttribute">[% Translate("Attribute") | html %]:</label>
            <div class="Field">
                [% Data.AttributesStrg %]
                <button id="KIXSidebarAddAttribute" class="Add" value="Add" title="[% Translate("Add entry") %]" alt="[% Translate("Add") | html %]">
                    <i class="fa fa-plus-square-o"></i>
                </button>
            </div>
            <div class="Clear"></div>
        </fieldset>
    </form>
</div>

<div id="LinkedCIs" class="WidgetSimple CanDrag">
    <div class="Header">
        <div class="WidgetAction Toggle" title="[% Translate("Show or hide the content.") | html %]" id="KIXSidebarLinkedICsBlockOpen" aria-controls="Core_UI_AutogeneratedID_0" aria-expanded="false"></div>
        <h2><span>[% Translate(Data.Title) | html %]</span></h2>
    </div>
    <div id="CIClassSelection" class="Content">
        [% Data.ConfigItemClassSelectionStrg %]
            <a href="#" id="KIXSidebarLinkedConfigItemSetClassFilter" title="[% Translate("Add Filter") | html %]"><i class="fa fa-filter"></i></a>
            <a href="#" id="KIXSidebarLinkedConfigItemResetClassFilter" title="[% Translate("Reset Filter") | html %]" class="Hidden"><i class="fa fa-trash-o"></i></a>
    </div>
    <div id="LinkConfigItemStrgContainer" class="Content">
        [% Data.LinkConfigItemStrg %]
    </div>
</div>

<script type="text/javascript">//<![CDATA[

    function initLinkedCICheckboxes() {
        // get calling action
        var CallingAction = '';

        $('input[name=Action]').each(function(){
            if ( CallingAction == '' && $(this).val() != 'KIXSidebarLinkedCIsAJAXHandler' ) {
                CallingAction = $(this).val();
            }
        });

        $('input[name=LinkAssignedConfigItems]').click(function() {
            if ($(this).prop('checked')) {
                if ( CallingAction == 'CustomerTicketMessage') {
                    URL = 'Action=CustomerLinkObject;SubAction=SingleLinkAdd;TargetKey=' + $('#LinkedTicketID').val() +';TargetObject=Ticket;SourceObject=ITSMConfigItem;SourceKey=' + $(this).val() +';Mode='+ $('#LinkMode').val();
                }
                else {
                    URL = 'Action=AgentLinkObject;SubAction=SingleLinkAdd;TargetKey=' + $('#LinkedTicketID').val() +';TargetObject=Ticket;SourceObject=ITSMConfigItem;SourceKey=' + $(this).val() +';Mode='+ $('#LinkMode').val();
                }
                Core.AJAX.FunctionCall(Core.Config.Get('CGIHandle'), URL, function () {}, 'text', false);
            }
            else {
                if ( CallingAction == 'CustomerTicketMessage') {
                    URL = 'Action=CustomerLinkObject;SubAction=SingleLinkDelete;TargetKey=' + $('#LinkedTicketID').val() +';TargetObject=Ticket;SourceObject=ITSMConfigItem;SourceKey=' + $(this).val() +';Mode='+ $('#LinkMode').val();
                }
                else {
                    URL = 'Action=AgentLinkObject;SubAction=SingleLinkDelete;TargetKey=' + $('#LinkedTicketID').val() +';TargetObject=Ticket;SourceObject=ITSMConfigItem;SourceKey=' + $(this).val() +';Mode='+ $('#LinkMode').val();
                }
                Core.AJAX.FunctionCall(Core.Config.Get('CGIHandle'), URL, function () {}, 'text', false);
            }
        });
    }
//]]>
</script>

[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[

    initLinkedCICheckboxes();

    var CallingAction = '',
        CustomerUserID = $('#KIXSidebarCustomerUserID').val(),
        CustomerID = $('#KIXSidebarCustomerID').val(),
        TicketID = $('#KIXSidebarTicketID').val(),
        FormID = $('input[name=FormID]').val();

    // get calling action
    $('input[name=Action]').each(function(){
        if ( CallingAction == '' && $(this).val() != 'KIXSidebarLinkedCIsAJAXHandler' ) {
            CallingAction = $(this).val();
        }
    });

    // reload assigned config item sidebar if selected user or company changed
    $('#SelectedCustomerUser,#CustomerID').on('change',function(){
        var SelectedCustomerUser = $('#SelectedCustomerUser').val(),
            SelectedCustomer = $('#CustomerID').val(),
            URL = 'Action=KIXSidebarLinkedCIsAJAXHandler;CallingAction=' + CallingAction + ';CustomerUserID=' + SelectedCustomerUser + ';CustomerID=' + SelectedCustomer + ';FormID=' + FormID;
        Core.AJAX.FunctionCall(Core.Config.Get('CGIHandle'), URL, function (Result) {
            $('#LinkConfigItemStrgContainer').html(Result);
            initLinkedCICheckboxes();
            $('#CIClassSelection').removeClass('Hidden');
        }, 'text', false);
    });

    // reload assigned config items if class changed
    $('#ConfigItemClass').on('change',function(){
        if ( $('#TicketID').length ) {
            TicketID = $('#TicketID').val();
        }

        // get customer user id
        if ( $('#SelectedCustomerUser').length ) {
            CustomerUserID = $('#SelectedCustomerUser').val();
        }

        // get customer id
        if ( $('#CustomerID').length ) {
            CustomerID = $('#CustomerID').val();
        }

        var Class = $('#ConfigItemClass').val(),
            URL = Core.Config.Get('CGIHandle') + '?Action=KIXSidebarLinkedCIsAJAXHandler;CallingAction=' + CallingAction + ';CustomerUserID=' + CustomerUserID + ';CustomerID=' + CustomerID + ';FormID=' + FormID + ';ConfigItemClass=' + Class + ';TicketID=' + TicketID;
        Core.AJAX.ContentUpdate($('#LinkConfigItemStrgContainer'), URL , function () {
            initLinkedCICheckboxes();
        });

        // reload attribute selection for this class
        var Data = Core.AJAX.SerializeForm($('#KIXSidebarLinkedConfigItemDialogForm')),
            URL = Core.Config.Get('CGIHandle') + '?Action=KIXSidebarLinkedCIsAJAXHandler;Subaction=AJAXUpdateSelection;CallingAction=' + CallingAction + ';CustomerUserID=' + CustomerUserID + ';CustomerID=' + CustomerID + ';FormID=' + FormID + ';ConfigItemClass=' + Class + ';TicketID=' + TicketID + ';' + Data;
        Core.AJAX.ContentUpdate($('#KIXSidebarLinkedCIAttribute'), URL , function () {
            $('#KIXSidebarLinkedConfigItemResetClassFilter').addClass('Hidden');
            initLinkedCICheckboxes();
        });
    });

    // click event for filter use - opens new dialog popup
    $('#KIXSidebarLinkedConfigItemSetClassFilter').on('click', function (Event) {
        var Class = $('#ConfigItemClass').val();

        Core.UI.Dialog.ShowContentDialog($('#KIXSidebarLinkedConfigItemDialog'), [% Translate("Config Item Filter") | JSON %], '20px', 'Center', true, [
            {
                Label: [% Translate("Apply") | JSON %],
                Function: function () {
                    var Data = Core.AJAX.SerializeForm($('#KIXSidebarLinkedConfigItemDialogForm')),
                        ExtendedData = 'CallingAction=' + CallingAction + ';CustomerUserID=' + CustomerUserID + ';CustomerID=' + CustomerID + ';FormID=' + FormID + ';ConfigItemClass=' + Class + ';TicketID=' + TicketID;

                    Core.AJAX.ContentUpdate($('#LinkConfigItemStrgContainer'), Core.Config.Get('CGIHandle') + '?' + Data + ExtendedData , function () {
                        initLinkedCICheckboxes();
                    });
                    Core.UI.Dialog.CloseDialog($('.Dialog:visible'));
                    $('#KIXSidebarLinkedConfigItemResetClassFilter').removeClass('Hidden');
                }
            },
        ]);
        return false;
    });

    // reset filter
    $('#KIXSidebarLinkedConfigItemResetClassFilter').on('click', function (Event) {
            var Class = $('#ConfigItemClass').val(),
                URL = Core.Config.Get('CGIHandle') + '?Action=KIXSidebarLinkedCIsAJAXHandler;CallingAction=' + CallingAction + ';CustomerUserID=' + CustomerUserID + ';CustomerID=' + CustomerID + ';FormID=' + FormID + ';ConfigItemClass=' + Class + ';TicketID=' + TicketID;

            Core.AJAX.ContentUpdate($('#LinkConfigItemStrgContainer'), URL , function () {
                initLinkedCICheckboxes();
            });
            $('#KIXSidebarLinkedConfigItemResetClassFilter').addClass('Hidden');
    });

    // add new attribute to filter dialog
    $(document).on('click','#KIXSidebarAddAttribute',function(event){
        var Selected = $('#KIXSidebarLinkedCIAttribute').val(),
            Data = {
                Action: 'KIXSidebarLinkedCIsAJAXHandler',
                Subaction: 'KIXSidebarAddAttribute',
                KIXSidebarLinkedCIAttribute: Selected
            };

        if ( Selected ) {
            // get input string for new attribute
            Core.AJAX.FunctionCall(Core.Config.Get('Baselink'), Data, function (Response) {
                var SelectedSearchFields = $('#SelectedSearchFields').val(),
                    SelectedSearchFieldsArray = new Array();

                // create used fields for processing
                if ( SelectedSearchFields.length ) {
                    SelectedSearchFieldsArray = SelectedSearchFields.split(",")
                }

                // insert new attribute input field
                $('#KIXSidebarLinkedConfigItemAttributes').append(Response.InputString);
                SelectedSearchFieldsArray.push(Selected);

                // save used fields for processing
                $('#SelectedSearchFields').val(SelectedSearchFieldsArray.join(','));
           });

            // remove already used attribut from selection
            $('#KIXSidebarLinkedCIAttribute').find("option[value='"+Selected+"']").remove();
            $('#KIXSidebarLinkedCIAttribute').trigger('redraw.InputField');
        }

        event.preventDefault();
    });

    // remove attribute from filter dialog
    $(document).on('click','.Remove',function(event){
        var FieldName = $(this).prev('input').attr('name'),
            Class = $('#ConfigItemClass').val(),
            SelectedSearchFields = $('#SelectedSearchFields').val(),
            SelectedSearchFieldsArrayOld = SelectedSearchFields.split(","),
            SelectedSearchFieldsArrayNew = new Array;

        // create new SelectedSearchFields
        $.each(SelectedSearchFieldsArrayOld, function(Index,Value) {
            if ( Value != FieldName )
                SelectedSearchFieldsArrayNew.push(Value);
        });

        // remove label, div and input
        $(this).parent('div').prev('label').remove();
        $(this).parent('div').remove();

        // set new SelectedSearchFields
        $('#SelectedSearchFields').val(SelectedSearchFieldsArrayNew.join(','));

        // add option to selection again
        var Data = Core.AJAX.SerializeForm($('#KIXSidebarLinkedConfigItemDialogForm')),
            URL = Core.Config.Get('CGIHandle') + '?Action=KIXSidebarLinkedCIsAJAXHandler;Subaction=AJAXUpdateSelection;CallingAction=' + CallingAction + ';CustomerUserID=' + CustomerUserID + ';CustomerID=' + CustomerID + ';FormID=' + FormID + ';ConfigItemClass=' + Class + ';TicketID=' + TicketID + ';' + Data;
        Core.AJAX.ContentUpdate($('#KIXSidebarLinkedCIAttribute'), URL , function () {
            initLinkedCICheckboxes();
        });

        event.preventDefault();
    });

    if ( $('#LinkConfigItemStrgContainer').html() && $('#LinkConfigItemStrgContainer').html().trim().length == 0 ) {
        $('#CIClassSelection').addClass('Hidden');
    }

//]]>
</script>
[% END %]